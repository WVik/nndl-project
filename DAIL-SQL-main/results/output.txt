eval_err_num:1
extra pred: SELECT name FROM station WHERE bikes_available > 10 AND city != "San Jose"
extra gold: SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  "San Jose"

extra pred: SELECT AVG(long) FROM station WHERE id NOT IN (SELECT station_id FROM status WHERE bikes_available > 10)
extra gold: SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)

extra pred: SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = "oren etzioni" ORDER BY t3.year DESC LIMIT 1;
extra gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC;

extra pred: SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid = t1.kid JOIN publication AS t3 ON t3.pid = t5.pid JOIN conference AS t2 ON t3.cid = t2.cid WHERE t2.name = "VLDB" GROUP BY t1.keyword HAVING COUNT(DISTINCT t3.pid) > 100;
extra gold: SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  "VLDB" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  100;

hard pred: SELECT city_name FROM city WHERE population = (SELECT MAX(population) FROM city);
hard gold: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );

extra pred: SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 3 OR T1.stars = 4
extra gold: SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4

eval_err_num:2
hard pred: SELECT name FROM Person WHERE name NOT IN (SELECT name FROM PersonFriend WHERE job = 'student')
hard gold: SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'

eval_err_num:3
hard pred: SELECT t2.policy_type_code FROM Customers AS t1 JOIN Customers_Policies AS t2 ON t1.Customer_ID = t2.Customer_ID WHERE t1.Customer_name = "Dayana Robel"
hard gold: SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  "Dayana Robel"

easy pred: SELECT Position FROM player GROUP BY Position HAVING avg(Points) > 20
easy gold: SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20

hard pred: SELECT name FROM station WHERE city = "Palo Alto" AND id NOT IN ( SELECT end_station_id FROM trip GROUP BY end_station_id HAVING COUNT(*) > 100 )
hard gold: SELECT name FROM station WHERE city  =  "Palo Alto" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100

hard pred: SELECT line_1 FROM Addresses WHERE address_id IN (SELECT address_id FROM Students) AND address_id IN (SELECT address_id FROM Teachers)
hard gold: SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id

medium pred: SELECT count(*) , Party_ID FROM party_events GROUP BY Party_ID
medium gold: SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id

medium pred: SELECT Patient.Name, Patient.Phone FROM Patient JOIN Appointment ON Patient.SSN = Appointment.Patient GROUP BY Patient.SSN HAVING COUNT(Appointment.AppointmentID) > 1
medium gold: SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1

medium pred: SELECT T1.id, T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id, T1.name HAVING count(*) >= 3
medium gold: SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3

eval_err_num:4
medium pred: SELECT COUNT(*) AS number_of_invoices, SUM(total) AS total_billed FROM invoices WHERE billing_state = 'CA'
medium gold: SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  "CA";

hard pred: SELECT document_id FROM Documents WHERE document_type_code = "CV" AND document_id NOT IN (SELECT document_id FROM Documents_with_expenses)
hard gold: SELECT document_id FROM Documents WHERE document_type_code  =  "CV" EXCEPT SELECT document_id FROM Documents_with_expenses

eval_err_num:5
extra pred: SELECT COUNT(DISTINCT t1.name) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid = t1.aid JOIN movie AS t3 ON t3.mid = t2.msid WHERE t1.nationality = "Iran" AND t3.director = "Jim Jarmusch";
extra gold: SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.nationality  =  "Iran" AND t3.name  =  "Jim Jarmusch";

extra pred: SELECT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = "TAIL" AND t4.venuename = "NIPS";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS";

hard pred: SELECT Name FROM Physician WHERE EmployeeID NOT IN (SELECT Physician FROM Appointment)
hard gold: SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID

eval_err_num:6
medium pred: SELECT "Famous_Title", "Age" FROM artist ORDER BY "Age" DESC
medium gold: SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC

medium pred: SELECT t1.title FROM paper AS t1 JOIN venue AS t2 ON t1.venueId = t2.venueId WHERE t1.year = 2015 AND t2.venueName = "pldi";
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

eval_err_num:7
medium pred: SELECT The SQL queries provided are examples of how to retrieve information from the database based on the given schema. The queries are focused on retrieving information related to papers published in the "chi" venue. To answer the question "chi papers", the following query can be used: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = "chi"; This query retrieves the distinct paper IDs from the paper table where the venue name is "chi". To answer the question "Show me chi papers", the same query can be used: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t2.venuename = "chi"; To answer the question "papers in chi", the same query can be used: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi";

extra pred: SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid = t1.aid JOIN DOMAIN AS t3 ON t3.did = t4.did JOIN organization AS t2 ON t2.oid = t1.oid WHERE t3.name = "Databases" AND t2.name = "University of Michigan";
extra gold: SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  "Databases" AND t2.name  =  "University of Michigan";

hard pred: SELECT t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = "yosemite and mono lake area" AND t1.food_type = "french" AND t1.rating > 2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

extra pred: SELECT T1.Attraction_Type_Description, T1.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T1.Attraction_Type_Description, T1.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:8
extra pred: SELECT park_name FROM home_game WHERE year = 2008 ORDER BY attendance DESC LIMIT 1
extra gold: SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;

hard pred: SELECT t1.name, t3.house_number, t3.street_name, t2.city_name, t2.county FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN location AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = "yosemite and mono lake area" AND t1.food_type = "french" AND t1.rating > 2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

eval_err_num:9
hard pred: SELECT building, room_number, semester, year FROM section WHERE course_id IN (SELECT course_id FROM course WHERE dept_name = 'Psychology') ORDER BY title
hard gold: SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title

eval_err_num:10
extra pred: SELECT DISTINCT k.keyphraseName FROM author a JOIN writes w ON a.authorId = w.authorId JOIN paper p ON w.paperId = p.paperId JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId WHERE a.authorName = "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

easy pred: SELECT count(*) FROM Customers WHERE customer_id IN (SELECT customer_id FROM Accounts)
easy gold: SELECT count(DISTINCT customer_id) FROM Accounts

medium pred: SELECT count(*) FROM Instruments WHERE SongId = (SELECT SongId FROM Songs WHERE Title = "Le Pop")
medium gold: SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  "Le Pop"

eval_err_num:11
extra pred: SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid = t1.oid JOIN writes AS t3 ON t3.aid = t1.aid JOIN publication AS t4 ON t3.pid = t4.pid JOIN journal AS t5 ON t4.jid = t5.jid WHERE t5.name = "PVLDB" AND t2.name = "University of Michigan";
extra gold: SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t2.name  =  "University of Michigan";

medium pred: SELECT t2.title FROM writes AS t1 JOIN paper AS t2 ON t1.paperId = t2.paperId JOIN author AS t3 ON t1.authorId = t3.authorId WHERE t3.authorName = "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

hard pred: SELECT T2.EmployeeID FROM Department AS T1 JOIN Physician AS T2 ON T1.Head = T2.EmployeeID GROUP BY T1.DepartmentID ORDER BY count(T1.DepartmentID) LIMIT 1
hard gold: SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;

hard pred: SELECT count(DISTINCT Scientist) FROM AssignedTo AS T1 JOIN Projects AS T2 ON T1.Project = T2.Code WHERE T2.Hours > 300
hard gold: SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name

extra pred: SELECT DISTINCT t3.paperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid = t2.citingpaperid JOIN paper AS t3 ON t2.citedpaperid = t3.paperid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t4.venuename = "NIPS" ORDER BY t1.numCiting DESC;
extra gold: SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t5 ON t2.paperid  =  t5.citingpaperid JOIN paper AS t3 ON t3.paperid  =  t5.citedpaperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Euclidean Distance" AND t4.venuename  =  "NIPS";

extra pred: SELECT T1.ID FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID WHERE T2.semester = 'Fall' AND T2.year = 2009 EXCEPT SELECT T1.ID FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID WHERE T2.semester = 'Spring' AND T2.year = 2010
extra gold: SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010

eval_err_num:12
hard pred: SELECT c.Name, c.Population FROM country c JOIN roller_coaster r ON c.Country_ID = r.Country_ID WHERE r.Height = (SELECT MAX(Height) FROM roller_coaster)
hard gold: SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1

eval_err_num:13
hard pred: SELECT T1.cust_name FROM customer AS T1 LEFT JOIN loan AS T2 ON T1.cust_ID = T2.cust_ID WHERE T2.loan_type IS NULL OR T2.loan_type != 'Mortgages'
hard gold: SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'

extra pred: SELECT Fname FROM Student WHERE StuID IN (SELECT stuid FROM Lives_in WHERE dormid = (SELECT dormid FROM Has_amenity GROUP BY dormid ORDER BY COUNT(*) DESC LIMIT 1))
extra gold: SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)

eval_err_num:14
extra pred: SELECT COUNT(*) AS num_airports, country FROM airports GROUP BY country ORDER BY num_airports DESC
extra gold: SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC

hard pred: SELECT employee_name FROM Employees WHERE employee_id NOT IN (SELECT employee_id FROM Circulation_History)
hard gold: SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id

extra pred: SELECT DISTINCT COUNT(t4.citedPaperId) FROM paper AS t3 JOIN cite AS t4 ON t3.paperId = t4.citedPaperId JOIN writes AS t2 ON t2.paperId = t3.paperId JOIN author AS t1 ON t2.authorId = t1.authorId WHERE t1.authorName = "Daniel Jurafsky";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky";

eval_err_num:15
hard pred: SELECT T2.product_name, COUNT(DISTINCT T1.customer_id) FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Products AS T3 ON T2.product_id = T3.product_id GROUP BY T2.product_name
hard gold: SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name

eval_err_num:16
extra pred: SELECT title, credits FROM course WHERE (building, room_number) IN (SELECT building, room_number FROM classroom ORDER BY capacity DESC LIMIT 1)
extra gold: SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)

extra pred: SELECT T1.first_name FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY COUNT(*) DESC LIMIT 5
extra gold: SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5

eval_err_num:17
medium pred: SELECT Physician.EmployeeID, Affiliated_With.Department FROM Physician JOIN Affiliated_With ON Physician.EmployeeID = Affiliated_With.Physician WHERE Affiliated_With.PrimaryAffiliation = true
medium gold: SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1

medium pred: SELECT DName, Room FROM Department WHERE DNO IN (SELECT DNO FROM Course WHERE CName = "INTRODUCTION TO COMPUTER SCIENCE")
medium gold: SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  "INTRODUCTION TO COMPUTER SCIENCE"

eval_err_num:18
easy pred: SELECT Player FROM player WHERE College = "UCLA"
easy gold: SELECT Player FROM match_season WHERE College  =  "UCLA"

hard pred: SELECT traverse FROM river WHERE LENGTH = (SELECT MAX(LENGTH) FROM river);
hard gold: SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( DISTINCT LENGTH ) FROM river );

extra pred: SELECT T1.Fname FROM Student AS T1 JOIN Lives_in AS T2 ON T1.StuID = T2.stuid JOIN Dorm AS T3 ON T3.dormid = T2.dormid JOIN Has_amenity AS T4 ON T3.dormid = T4.dormid GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)

extra pred: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = "brian curless" AND t1.keyphrasename = "keyphrase0";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

eval_err_num:19
easy pred: SELECT Employee_ID FROM Documents_to_be_Destroyed WHERE Destroyed_by_Employee_ID IS NOT NULL
easy gold: SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed

extra pred: SELECT t1.title, t2.keyphraseName FROM paper AS t1 JOIN paperKeyphrase AS t3 ON t1.paperId = t3.paperId JOIN keyphrase AS t2 ON t3.keyphraseId = t2.keyphraseId JOIN venue AS t4 ON t4.venueId = t1.venueId WHERE t1.year = 2012 AND t4.venueName = "EMNLP-CoNLL" ORDER BY t1.numCiting DESC LIMIT 1;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.keyphraseid  ,  t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid  =  t1.paperid JOIN venue AS t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  "EMNLP-CoNLL" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;

hard pred: SELECT member_name FROM member WHERE member_id NOT IN (SELECT member_in_charge_id FROM party_events)
hard gold: SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id

eval_err_num:20
hard pred: SELECT T1.state FROM College AS T1 JOIN Player AS T2 ON T1.cName = T2.cName WHERE T2.pName = "Charles"
hard gold: SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'

extra pred: SELECT t3.title FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid = t2.paperid JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN venue AS t4 ON t4.venueid = t3.venueid WHERE t1.keyphrasename = "TAIL" AND t4.venuename = "NIPS";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS";

medium pred: SELECT Project_Details FROM Projects WHERE Project_ID IN (SELECT Project_ID FROM Documents WHERE Document_Name = "King Book")
medium gold: SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  "King Book"

medium pred: SELECT date_order_placed FROM Orders WHERE order_id IN (SELECT order_id FROM Shipments WHERE invoice_number = 10)
medium gold: SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10

eval_err_num:21
hard pred: SELECT T3.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id WHERE T2.brand = 'Sigma' OR T2.brand = 'Olympus'
hard gold: SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus'

eval_err_num:22
extra pred: SELECT t3.title, COUNT(t4.citedPaperId) AS citation_count FROM paper AS t3 JOIN cite AS t4 ON t3.paperId = t4.citedPaperId JOIN writes AS t2 ON t2.paperId = t3.paperId JOIN author AS t1 ON t2.authorId = t1.authorId WHERE t1.authorName = "ohad shamir" GROUP BY t3.title ORDER BY citation_count DESC LIMIT 1;
extra gold: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ohad shamir" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;

easy pred: SELECT student_id FROM student_course_registrations WHERE course_id = 301
easy gold: SELECT student_id FROM student_course_attendance WHERE course_id  =  301

eval_err_num:23
hard pred: SELECT DISTINCT p.paperId FROM paper p JOIN paperDataset pd ON p.paperId = pd.paperId JOIN dataset d ON pd.datasetId = d.datasetId WHERE d.datasetName = "WebKB";
hard gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB";

extra pred: SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id WHERE t2.product_id = ( SELECT product_id FROM complaints GROUP BY product_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1

easy pred: SELECT * FROM Vehicles WHERE vehicle_id = 1
easy gold: SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;

extra pred: SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorId = t1.authorId JOIN paper AS t3 ON t2.paperId = t3.paperId WHERE t1.authorName = "Ye Cao" GROUP BY t3.year ORDER BY COUNT(t3.paperId) DESC LIMIT 1;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE "Ye Cao" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;

medium pred: SELECT AVG(UnitPrice) FROM Track WHERE GenreId IN (SELECT GenreId FROM Genre WHERE Name = 'Rock')
medium gold: SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  "Rock"

hard pred: SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.School_ID = t2.School_ID WHERE t2.ACC_Percent = (SELECT MIN(ACC_Percent) FROM basketball_match)
hard gold: SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1

hard pred: SELECT Customer_Name FROM Clients WHERE Client_ID NOT IN (SELECT Customer_ID FROM Bookings)
hard gold: SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID

extra pred: SELECT DISTINCT t1.authorid, t5.keyphrasename FROM author AS t1 JOIN writes AS t2 ON t1.authorid = t2.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid JOIN paperkeyphrase AS t4 ON t3.paperid = t4.paperid JOIN keyphrase AS t5 ON t4.keyphraseid = t5.keyphraseid WHERE t1.authorname = "brian curless" AND t5.keyphrasename = "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

hard pred: SELECT product FROM product WHERE max_page_size != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY COUNT(*) DESC LIMIT 1)
hard gold: SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)

extra pred: SELECT T1.task_details, T1.task_id, T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'omnis' OR T2.project_id IN (SELECT project_id FROM Project_Outcomes GROUP BY project_id HAVING COUNT(*) > 2)
extra gold: SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2

extra pred: SELECT t4.day, SUM(t4.count) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN category AS t3 ON t3.business_id = t1.business_id JOIN checkin AS t4 ON t4.business_id = t1.business_id WHERE t1.city = "Los Angeles" AND t2.category_name = "Moroccan" AND t3.category_name = "restaurant" GROUP BY t4.day;
extra gold: SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  "Los Angeles" AND t2.category_name  =  "restaurant" AND t3.category_name  =  "Moroccan";

hard pred: SELECT T1.title FROM course AS T1 JOIN department AS T2 ON T1.dept_name = T2.dept_name WHERE T2.dept_name = "Statistics" EXCEPT SELECT T1.title FROM course AS T1 JOIN department AS T2 ON T1.dept_name = T2.dept_name WHERE T2.dept_name = "Psychology"
hard gold: SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'

extra pred: SELECT T2.Aircraft FROM airport AS T1 JOIN airport_aircraft AS T3 ON T1.Airport_ID = T3.Airport_ID JOIN aircraft AS T2 ON T3.Aircraft_ID = T2.Aircraft_ID WHERE T1.Airport_Name = "London Heathrow" AND T1.Airport_Name = "London Gatwick"
extra gold: SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  "London Heathrow" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  "London Gatwick"

extra pred: SELECT M.Name FROM Medication AS M JOIN Prescribes AS P ON M.Code = P.Medication JOIN Stay AS S ON P.Patient = S.Patient JOIN Room AS R ON S.Room = R.RoomNumber WHERE R.RoomNumber = 111
extra gold: SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111

extra pred: SELECT COUNT(*) FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = "Peter Mertens" AND t1.authorname = "Dina Barbian";
extra gold: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";

eval_err_num:24
extra pred: SELECT DISTINCT t3.authorid, COUNT(t4.paperid) as num_papers FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = "syntactic parsing" GROUP BY t3.authorid ORDER BY num_papers DESC LIMIT 1;
extra gold: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;

eval_err_num:25
hard pred: SELECT CONCAT(s.first_name, ' ', s.last_name) AS full_name FROM staff AS s JOIN rental AS r ON s.staff_id = r.staff_id JOIN customer AS c ON r.customer_id = c.customer_id WHERE c.first_name = 'April' AND c.last_name = 'Burns';
hard gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'

hard pred: SELECT state FROM customer GROUP BY state ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1

eval_err_num:26
medium pred: SELECT c.cust_name, c.acc_bal FROM customer c JOIN loan l ON c.cust_ID = l.cust_ID GROUP BY c.cust_name, c.acc_bal HAVING SUM(l.amount) > 5000
medium gold: SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000

hard pred: SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorId = t1.authorId JOIN paper AS t3 ON t2.paperId = t3.paperId WHERE t1.authorName = "subhasis chaudhuri";
hard gold: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "subhasis chaudhuri";

eval_err_num:27
hard pred: SELECT T2.Location FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T2.Station_ID = T3.Station_ID WHERE T1.Market_Value > 100
hard gold: SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100

hard pred: SELECT user_name, password FROM Users WHERE role_code = (SELECT role_code FROM Roles GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)
hard gold: SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:28
extra pred: SELECT t1.year, COUNT(t1.paperId) AS numPapers FROM venue AS t2 JOIN paper AS t1 ON t2.venueId = t1.venueId WHERE t2.venueName = "NIPS" GROUP BY t1.year ORDER BY numPapers DESC LIMIT 1;
extra gold: SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "NIPS" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;

hard pred: SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating WHERE rID = (SELECT rID FROM Reviewer WHERE name = 'Chris Jackson'))
hard gold: SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'

extra pred: SELECT t1.keyword FROM keyword AS t1 JOIN publication_keyword AS t2 ON t1.kid = t2.kid JOIN publication AS t3 ON t2.pid = t3.pid JOIN journal AS t4 ON t3.jid = t4.jid WHERE t4.name = "PVLDB" GROUP BY t1.keyword HAVING COUNT(t2.pid) > 100;
extra gold: SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  "PVLDB" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t2.title )  >  100;

hard pred: SELECT Hardware_Model_name FROM phone WHERE Company_name = "Nokia Corporation" OR screen_mode IN (SELECT Graphics_mode FROM screen_mode WHERE Type = "Graphics")
hard gold: SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  "Graphics" OR t2.Company_name  =  "Nokia Corporation"

medium pred: SELECT COUNT(*) FROM publication AS p JOIN journal AS j ON p.jid = j.jid WHERE j.name = "PVLDB";
medium gold: SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB";

extra pred: SELECT T2.document_structure_description FROM Documents AS T1 JOIN Document_Structures AS T2 ON T1.document_structure_code = T2.document_structure_code ORDER BY T1.access_count ASC LIMIT 1
extra gold: SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:29
medium pred: SELECT t2.authorName FROM paper AS t1 JOIN writes AS t2 ON t1.paperId = t2.paperId WHERE t1.year = 2015;
medium gold: SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;

extra pred: SELECT decor FROM Rooms GROUP BY decor ORDER BY COUNT(*) ASC LIMIT 1
extra gold: SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;

medium pred: SELECT Projects.Project_ID, Projects.Project_Details FROM Projects JOIN Documents ON Projects.Project_ID = Documents.Project_ID GROUP BY Projects.Project_ID HAVING COUNT(Documents.Document_ID) >= 2
medium gold: SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2

eval_err_num:30
hard pred: SELECT T1.name, T2.balance AS checking_balance, T3.balance AS savings_balance FROM ACCOUNTS AS T1 JOIN CHECKING AS T2 ON T1.custid = T2.custid JOIN SAVINGS AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance DESC
hard gold: SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC

eval_err_num:31
extra pred: SELECT TYPE FROM Vocals AS V JOIN Band AS B ON V.BandmateId = B.Id WHERE B.Firstname = "Solveig" GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  "Solveig" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1

eval_err_num:32
hard pred: SELECT document_name FROM Documents WHERE document_code NOT IN (SELECT document_code FROM Document_Sections_Images)
hard gold: SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id

medium pred: SELECT Name FROM musical WHERE Musical_ID IN (SELECT Musical_ID FROM actor GROUP BY Musical_ID HAVING COUNT(*) >= 3)
medium gold: SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3

easy pred: SELECT area FROM state WHERE area = (SELECT MAX(area) FROM state);
easy gold: SELECT MAX ( area ) FROM state;

easy pred: SELECT T1.Fname, T1.Lname, T2.Fname, T2.Lname FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.StuID WHERE T1.city_code = "BAL"
easy gold: SELECT Advisor FROM STUDENT WHERE city_code  =  "BAL"

eval_err_num:33
medium pred: SELECT EMAIL FROM employees WHERE COMMISSION_PCT IS NULL AND SALARY BETWEEN 7000 AND 12000 AND DEPARTMENT_ID = 50
medium gold: SELECT email FROM employees WHERE commission_pct  =  "null" AND salary BETWEEN 7000 AND 12000 AND department_id = 50

extra pred: SELECT t4.journalName FROM journal AS t4 JOIN paper AS t3 ON t4.journalId = t3.journalId JOIN writes AS t2 ON t2.paperId = t3.paperId JOIN author AS t1 ON t2.authorId = t1.authorId WHERE t1.authorName = "Donald E Knuth" ORDER BY t3.year DESC LIMIT 1;
extra gold: SELECT DISTINCT t3.journalid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Donald E Knuth" GROUP BY t3.journalid  ,  t3.year ORDER BY t3.year DESC;

hard pred: SELECT T3.Name FROM Scientists AS T3 WHERE T3.SSN NOT IN (SELECT T1.Scientist FROM AssignedTo AS T1 JOIN Projects AS T2 ON T1.Project = T2.Code WHERE T2.Hours = (SELECT max(Hours) FROM Projects))
hard gold: SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)

easy pred: SELECT COUNT ( state_name ) FROM state WHERE country_name = 'usa';
easy gold: SELECT COUNT ( state_name ) FROM state;

easy pred: SELECT Studio FROM film GROUP BY Studio HAVING AVG(Gross_in_dollar) > 4500000
easy gold: SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000

easy pred: SELECT COUNT(state_name) FROM state WHERE country_name = 'usa';
easy gold: SELECT COUNT ( state_name ) FROM state;

eval_err_num:34
extra pred: SELECT T1.first_name, T1.last_name, T3.city FROM employees AS T1 JOIN locations AS T3 ON T1.location_id = T3.location_id WHERE T1.first_name LIKE '%z%'
extra gold: SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'

medium pred: SELECT Document_Locations.Location_Code, Document_Locations.Date_in_Location_From, Document_Locations.Date_in_Locaton_To FROM Document_Locations JOIN All_Documents ON Document_Locations.Document_ID = All_Documents.Document_ID
medium gold: SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations

medium pred: SELECT name, headquarter, founder FROM Manufacturers WHERE revenue = (SELECT max(revenue) FROM Manufacturers)
medium gold: SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1

eval_err_num:35
extra pred: SELECT DISTINCT p.paperId FROM paper p JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId JOIN venue v ON p.venueId = v.venueId WHERE k.keyphraseName = "Parsing" AND p.year = 2012 AND v.venueName = "acl";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl";

medium pred: SELECT count(DISTINCT city) FROM airports WHERE country = 'United States' GROUP BY city HAVING count(*) > 3
medium gold: SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3

eval_err_num:36
medium pred: SELECT count(*) , constructorId FROM races GROUP BY constructorId
medium gold: SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid

extra pred: SELECT t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = "bay area" AND t1.food_type = "american" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = "bay area" AND t1.food_type = "american");
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

hard pred: SELECT Order_Date FROM Customer_Orders WHERE Order_ID IN (SELECT Order_ID FROM Order_Items WHERE Product_ID IN (SELECT Product_ID FROM Products WHERE Product_Price > 1000))
hard gold: SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000

medium pred: SELECT count(*) FROM Instruments WHERE SongId = (SELECT SongId FROM Songs WHERE Title = "Badlands")
medium gold: SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  "Badlands"

easy pred: SELECT count(*) FROM CLASS WHERE CRS_CODE = 'ACCT-211'
easy gold: SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'

hard pred: SELECT T2.Location FROM performance AS T1 JOIN performance AS T2 ON T1.Location = T2.Location WHERE T1.Attendance > 2000 INTERSECT SELECT T2.Location FROM performance AS T1 JOIN performance AS T2 ON T1.Location = T2.Location WHERE T1.Attendance < 1000
hard gold: SELECT LOCATION FROM performance WHERE Attendance  >  2000 INTERSECT SELECT LOCATION FROM performance WHERE Attendance  <  1000

eval_err_num:37
hard pred: SELECT DISTINCT p.paperId, p.title FROM paper p JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId WHERE k.keyphraseName = "Question Answering";
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering";

medium pred: SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_value_purchased) > 50000 OR avg(total_value_purchased) < 30000
medium gold: SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000

hard pred: SELECT customer_id, max(amount_paid) FROM Payments GROUP BY customer_id
hard gold: SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1

hard pred: SELECT mountain_name FROM mountain WHERE country_name = 'USA' ORDER BY mountain_altitude DESC LIMIT 1;
hard gold: SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );

eval_err_num:38
medium pred: SELECT company, main_industry FROM company WHERE Headquarters <> 'USA'
medium gold: SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'

eval_err_num:39
medium pred: SELECT T2.customer_name, T1.city, T1.date_from, T1.date_to FROM Customer_Address_History AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id JOIN Addresses AS T3 ON T1.address_id = T3.address_id
medium gold: SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id

hard pred: SELECT Product_ID FROM Invoice_Items GROUP BY Product_ID ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1

medium pred: SELECT Subjects.subject_id, Subjects.subject_name, count(Courses.course_id) FROM Subjects JOIN Courses ON Subjects.subject_id = Courses.subject_id GROUP BY Subjects.subject_id, Subjects.subject_name
medium gold: SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id

hard pred: SELECT T1.Name FROM artist AS T1 JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN exhibition_record AS T3 ON T2.Exhibition_ID = T3.Exhibition_ID GROUP BY T1.Name HAVING avg(T3.Attendance) > 200
hard gold: SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200

medium pred: SELECT cust_name, acc_type, acc_bal FROM customer WHERE credit_score = (SELECT MAX(credit_score) FROM customer)
medium gold: SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1

eval_err_num:40
medium pred: SELECT T1.Player, T2.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = 'Columbus Crew';
medium gold: SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  "Columbus Crew"

extra pred: SELECT t1.organization_name FROM Organizations AS t1 JOIN Organization_Contact_Individuals AS t2 ON t1.organization_id = t2.organization_id GROUP BY t1.organization_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT DISTINCT pitStops.driverId, pitStops.stop FROM pitStops WHERE pitStops.duration < (SELECT MIN(duration) FROM pitStops WHERE raceId = 841)
extra gold: SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)

easy pred: SELECT Title FROM Albums WHERE Year = 2010
easy gold: SELECT * FROM Albums WHERE YEAR  =  2010

eval_err_num:41
extra pred: SELECT sum(s.Number_Deaths), sum(s.Damage_millions_USD) FROM storm s WHERE s.Max_speed > (SELECT avg(Max_speed) FROM storm)
extra gold: SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)

easy pred: SELECT T2.Fname, T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.Advisor = T2.StuID WHERE T1.city_code = "BAL"
easy gold: SELECT Advisor FROM STUDENT WHERE city_code  =  "BAL"

hard pred: SELECT DISTINCT t3.paperId, t3.title FROM paperKeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseId = t1.keyphraseId JOIN paper AS t3 ON t3.paperId = t2.paperId WHERE t1.keyphraseName = "Question Answering";
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering";

hard pred: SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_Vote WHERE T1.Advisor = 8741
hard gold: SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  "8741"

medium pred: SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000 GROUP BY T1.driverid
medium gold: SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000

medium pred: SELECT COUNT(DISTINCT Instrument) FROM Instruments WHERE SongId = (SELECT SongId FROM Songs WHERE Title = "Le Pop")
medium gold: SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  "Le Pop"

medium pred: SELECT count(*) , account_id FROM Financial_Transactions GROUP BY account_id
medium gold: SELECT count(*) ,  account_id FROM Financial_transactions

extra pred: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = "Movies" AND T1.id NOT IN (SELECT T1.id FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = "Music")
extra gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'

hard pred: SELECT gender, count(*) FROM Staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1

eval_err_num:42
medium pred: SELECT director FROM Movie WHERE director IS NOT NULL GROUP BY director HAVING count(*) = 1
medium gold: SELECT director FROM Movie WHERE director != "null" GROUP BY director HAVING count(*)  =  1

eval_err_num:43
medium pred: SELECT T1.first_name, T1.last_name, T1.salary FROM employees AS T1 WHERE T1.commission_pct IS NULL
medium gold: SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  "null"

extra pred: SELECT business_id FROM checkin GROUP BY business_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;

eval_err_num:44
easy pred: SELECT count(*) FROM storm WHERE Number_Deaths IS NOT NULL
easy gold: SELECT count(*) FROM storm WHERE Number_Deaths  >  0

medium pred: SELECT count(DISTINCT Type) FROM Vocals WHERE SongId = (SELECT SongId FROM Songs WHERE Title = "Le Pop")
medium gold: SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  "Le Pop"

eval_err_num:45
extra pred: SELECT T1.FirstName, T1.LastName FROM list AS T1 LEFT JOIN teachers AS T2 ON T1.Classroom = T2.Classroom WHERE T1.Grade = 1 AND (T2.FirstName != "OTHA" OR T2.LastName != "MOYER")
extra gold: SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  "OTHA" AND T2.lastname  =  "MOYER"

easy pred: SELECT t1.text FROM review AS t1 JOIN business AS t2 ON t1.business_id = t2.business_id WHERE t2.rating < 1;
easy gold: SELECT text FROM review WHERE rating  <  1;

extra pred: SELECT T2.Lastname FROM Band AS T2 JOIN Vocals AS T1 ON T1.Bandmate = T2.Id GROUP BY T2.Lastname ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = "san francisco" AND t1.food_type = "french" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = "san francisco" AND t1.food_type = "french");
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.food_type  =  "french" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.food_type  =  "french" );

medium pred: SELECT * FROM jobs WHERE JOB_ID IN (SELECT JOB_ID FROM employees WHERE SALARY >= 12000)
medium gold: SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000

extra pred: SELECT T1.LName, T1.Sex FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID JOIN Video_Games AS T3 ON T2.GameID = T3.GameID WHERE T3.GName = "Call of Destiny" INTERSECT SELECT T1.LName, T1.Sex FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID JOIN Video_Games AS T3 ON T2.GameID = T3.GameID WHERE T3.GName = "Works of Widenius"
extra gold: SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  "Call of Destiny" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  "Works of Widenius")

eval_err_num:46
hard pred: SELECT b.name, a.name FROM browser b JOIN accelerator_compatible_browser acb ON b.id = acb.browser_id JOIN Web_client_accelerator a ON acb.accelerator_id = a.id ORDER BY acb.compatible_since_year DESC
hard gold: SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC

extra pred: SELECT T1.artist_name, count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'Bangla' GROUP BY T1.artist_name ORDER BY count(*) DESC LIMIT 3
extra gold: SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  "bangla" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3

hard pred: SELECT COUNT(*) FROM highlow WHERE highest_elevation > (SELECT highest_elevation FROM highlow WHERE state_name = (SELECT state_name FROM state WHERE capital = (SELECT MAX(capital) FROM state)));
hard gold: SELECT COUNT ( state_name ) FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  ( SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) ) ) );

extra pred: SELECT t4.title FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t1.paperid = t4.paperid WHERE t2.keyphrasename = "deep learning" ORDER BY t4.year ASC LIMIT 1;
extra gold: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t3.year ORDER BY t3.year ASC;

eval_err_num:47
hard pred: SELECT t2.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = "Binders Unbound"
hard gold: SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  "Binders Unbound"

eval_err_num:48
medium pred: SELECT T2.Draft_Pick_Number, T2.Draft_Class FROM match_season AS T1 JOIN player AS T2 ON T1.Player = T2.Player WHERE T1.Position = "Defender"
medium gold: SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  "Defender"

eval_err_num:49
hard pred: SELECT DISTINCT t2.venueName FROM writes AS t1 JOIN paper AS t2 ON t1.paperId = t2.paperId JOIN author AS t3 ON t1.authorId = t3.authorId WHERE t3.authorName = "Daniella Coelho";
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho";

eval_err_num:50
hard pred: SELECT avg(g.gradepoint) FROM Student s JOIN Enrolled_in e ON s.StuID = e.StuID JOIN Gradeconversion g ON e.Grade = g.lettergrade WHERE s.LName = "Smith"
hard gold: SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  "Smith"

eval_err_num:51
hard pred: SELECT DISTINCT p.paperId FROM paper p JOIN writes w ON p.paperId = w.paperId JOIN author a ON w.authorId = a.authorId WHERE a.authorName = "Liwen Xiong" AND p.year = 2015;
hard gold: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015;

easy pred: SELECT eid FROM employee WHERE salary >= 100000
easy gold: SELECT eid FROM Employee WHERE salary  >  100000

extra pred: SELECT T2.balance FROM ACCOUNTS AS T1 JOIN CHECKING AS T2 ON T1.custid = T2.custid JOIN SAVINGS AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1
extra gold: SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1

eval_err_num:52
extra pred: SELECT organisation_id, COUNT(*) FROM Project_Outcomes GROUP BY organisation_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT document_id FROM Documents WHERE document_status_code = "done" AND document_type_code = "Paper" AND shipping_agent_code != "USPS"
extra gold: SELECT document_id FROM Documents WHERE document_status_code  =  "done" AND document_type_code = "Paper" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = "USPS";

medium pred: SELECT T1.course_description, T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(*) > 2
medium gold: SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2

medium pred: SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = "Spring"
medium gold: SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  "Spring"

eval_err_num:53
medium pred: SELECT "Card_Number", "Name", "Hometown" FROM "member" ORDER BY "Level" DESC
medium gold: SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC

eval_err_num:54
extra pred: SELECT t2.house_number, t2.street_name, t2.city_name FROM LOCATION AS t1 JOIN GEOGRAPHIC AS t2 ON t1.city_name = t2.city_name WHERE t2.region = "bay area";
extra gold: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "bay area" );

medium pred: SELECT t2.house_number, t2.street_name FROM LOCATION AS t2 JOIN RESTAURANT AS t1 ON t1.id = t2.restaurant_id WHERE t2.city_name = "alameda";
medium gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "alameda";

extra pred: SELECT T1.surname, T1.driverId FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverId = T2.driverId JOIN results AS T3 ON T1.driverId = T3.driverId GROUP BY T1.driverId HAVING COUNT(T2.stop) = 11 AND COUNT(T3.resultId) > 5
extra gold: SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5

eval_err_num:55
easy pred: SELECT customer_name FROM Customers WHERE payment_method <> 'Cash'
easy gold: SELECT customer_name FROM customers WHERE payment_method != 'Cash'

medium pred: SELECT T1.Name, T2.Company FROM entrepreneur AS T2 JOIN people AS T1 ON T1.People_ID = T2.People_ID ORDER BY T2.Money_Requested DESC
medium gold: SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested

hard pred: SELECT T1.name, T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance < T2.balance
hard gold: SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance

eval_err_num:56
extra pred: SELECT COUNT(*) AS num_visits, fault_log_entry_id FROM Engineer_Visits GROUP BY fault_log_entry_id ORDER BY num_visits DESC LIMIT 1
extra gold: SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:57
extra pred: SELECT service_id, service_details, COUNT(*) AS number FROM Services GROUP BY service_id, service_details ORDER BY number DESC LIMIT 1
extra gold: SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:58
medium pred: SELECT T1.Country FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation GROUP BY T1.Appelation HAVING COUNT(*) <= 3
medium gold: SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3

medium pred: SELECT T2.investor_id, avg(T1.amount_of_transaction) FROM Transactions AS T1 JOIN Investors AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id
medium gold: SELECT investor_id ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id

medium pred: SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.ID = t2.Swimmer_ID GROUP BY t1.name HAVING COUNT(t2.ID) >= 2
medium gold: SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2

eval_err_num:59
extra pred: SELECT T1.Fname || ' ' || T1.Lname AS Full_Name FROM Faculty AS T1 JOIN Course AS T2 ON T1.FacID = T2.Instructor GROUP BY T1.FacID ORDER BY COUNT(*) DESC LIMIT 3
extra gold: SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3

extra pred: SELECT DISTINCT t1.keyphraseName FROM paperKeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseId = t1.keyphraseId JOIN paper AS t3 ON t3.paperId = t2.paperId JOIN writes AS t4 ON t4.paperId = t3.paperId JOIN author AS t5 ON t4.authorId = t5.authorId WHERE t5.authorName = "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

hard pred: SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.ID = T2.ID WHERE T2.semester = 'Fall' AND T2.year = 2003
hard gold: SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)

hard pred: SELECT SUM(access_count) FROM Documents WHERE document_type_code = (SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY COUNT(*) DESC LIMIT 1)
hard gold: SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT t3.title FROM paper AS t3 JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid JOIN paperkeyphrase AS t2 ON t2.paperid = t3.paperid JOIN keyphrase AS t5 ON t5.keyphraseid = t2.keyphraseid WHERE t1.authorname = "brian curless" AND t5.keyphrasename = "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

medium pred: SELECT count(Degrees) FROM degrees AS T1 JOIN campuses AS T2 ON T1.Campus = T2.Id WHERE T2.Campus = "San Francisco State University" AND T1.Year = 2004
medium gold: SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  "San Francisco State University"

hard pred: SELECT Governor, COUNT(*) FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:60
medium pred: SELECT T3.Policy_Type_Code FROM Customers AS T1 JOIN Policies AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Claim_Headers AS T3 ON T2.Policy_ID = T3.Policy_ID WHERE T1.Customer_Details = "Dayana Robel"
medium gold: SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  "Dayana Robel"

hard pred: SELECT College, COUNT(DISTINCT Author) FROM submission GROUP BY College ORDER BY COUNT(DISTINCT Author) DESC LIMIT 1
hard gold: SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1

medium pred: SELECT Student.StuID, SUM(Plays_Games.Hours_Played) FROM Student JOIN Plays_Games ON Student.StuID = Plays_Games.StuID GROUP BY Student.StuID
medium gold: SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid

extra pred: SELECT T1.project_details FROM Projects AS T1 JOIN Project_Outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_Outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description = 'patents' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_Outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_Outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description = 'papers'
extra gold: SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'

hard pred: SELECT Status FROM city WHERE Population > 1500 OR Population < 500
hard gold: SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500

easy pred: SELECT citing FROM cite WHERE cited = (SELECT pid FROM publication WHERE title = "Making database systems usable");
easy gold: SELECT citation_num FROM publication WHERE title  =  "Making database systems usable";

medium pred: SELECT T1.name, count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T1.u_id, T1.name
medium gold: SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id

hard pred: SELECT t1.Publisher FROM book_club AS t1 JOIN culture_company AS t2 ON t1.book_club_id = t2.book_club_id WHERE t1.Year = 1989 INTERSECT SELECT t1.Publisher FROM book_club AS t1 JOIN culture_company AS t2 ON t1.book_club_id = t2.book_club_id WHERE t1.Year = 1990
hard gold: SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990

medium pred: SELECT T1.date_order_placed FROM Orders AS T1 JOIN Shipments AS T2 ON T1.order_id = T2.order_id JOIN Invoices AS T3 ON T2.invoice_number = T3.invoice_number WHERE T3.invoice_number = 10
medium gold: SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10

medium pred: SELECT T3.guest_first_name, T1.booking_start_date, T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id JOIN Guests AS T3 ON T1.guest_id = T3.guest_id
medium gold: SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id

easy pred: SELECT Projects.Project_ID FROM Projects JOIN Documents ON Projects.Project_ID = Documents.Project_ID GROUP BY Projects.Project_ID HAVING COUNT(*) >= 2
easy gold: SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2

hard pred: SELECT count(*) , District_name FROM district JOIN store_district ON district.District_ID = store_district.District_ID GROUP BY District_name
hard gold: SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city

hard pred: SELECT Location FROM cinema WHERE Openning_year = 2010 AND Location IN (SELECT Location FROM cinema WHERE Openning_year = 2011)
hard gold: SELECT LOCATION FROM cinema WHERE openning_year  =  2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year  =  2011

easy pred: SELECT count(*) FROM Projects
easy gold: SELECT count(DISTINCT name) FROM projects

medium pred: SELECT T1.Store_Name FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T2.Product_Name = "film"
medium gold: SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  "film"

eval_err_num:61
extra pred: SELECT T.pName FROM Tryout AS T JOIN College AS C ON T.cName = C.cName WHERE C.enr = (SELECT MAX(enr) FROM College)
extra gold: SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)

hard pred: SELECT state_name FROM city WHERE city_name = (SELECT capital FROM state WHERE population = (SELECT MAX(population) FROM state));
hard gold: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );

extra pred: SELECT t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = "bay area" AND t1.food_type = "american" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = "bay area" AND t1.food_type = "american");
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT DISTINCT t2.datasetName FROM paperDataset AS t3 JOIN dataset AS t2 ON t3.datasetId = t2.datasetId JOIN paperKeyphrase AS t1 ON t1.paperId = t3.paperId JOIN keyphrase AS t4 ON t1.keyphraseId = t4.keyphraseId WHERE t4.keyphraseName = "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

eval_err_num:62
extra pred: SELECT DISTINCT p.title FROM paper p JOIN writes w ON p.paperId = w.paperId JOIN author a ON w.authorId = a.authorId WHERE a.authorName = 'Peter Mertens' OR a.authorName = 'Dina Barbian';
extra gold: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";

medium pred: SELECT count(*) FROM player WHERE Points < 30 GROUP BY Position
medium gold: SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION

eval_err_num:63
hard pred: SELECT city_name FROM city WHERE population/density = (SELECT MAX(population/density) FROM city WHERE country_name = 'USA')
hard gold: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );

eval_err_num:64
extra pred: SELECT cName FROM College WHERE (state = 'LA' AND enr > 15000) OR (state = 'AZ' AND enr < 13000)
extra gold: SELECT cName FROM College WHERE enr  <  13000 AND state = "AZ" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = "LA"

medium pred: SELECT t1.title FROM paper AS t1 JOIN venue AS t2 ON t1.venueId = t2.venueId WHERE t1.year = 2015 AND t2.venueName = "pldi";
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

medium pred: SELECT Campus FROM enrollments WHERE TotalEnrollment_AY > 400 AND FTE_AY > 200 AND Year = 1956
medium gold: SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200

medium pred: SELECT booking_start_date, booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = "Duplex"
medium gold: SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  "Duplex"

medium pred: SELECT population FROM city WHERE country_name = "USA" AND state_name = "wisconsin";
medium gold: SELECT population FROM city WHERE population  >  150000 AND state_name  =  "wisconsin";

eval_err_num:65
hard pred: SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num LEFT JOIN class AS T3 ON T2.emp_num = T3.prof_num WHERE T3.prof_num IS NULL
hard gold: SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num

medium pred: SELECT District_name FROM district WHERE City_Area = (SELECT MIN(City_Area) FROM district);
medium gold: SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1

medium pred: SELECT COUNT(DISTINCT Position) FROM Member_of_club WHERE ClubID = (SELECT ClubID FROM Club WHERE ClubName = "Bootup Baltimore")
medium gold: SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  "Bootup Baltimore"

eval_err_num:66
medium pred: SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM actor WHERE actor_id IN ( SELECT actor_id FROM film_actor GROUP BY actor_id HAVING COUNT(*) > 30 )
medium gold: SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30

medium pred: SELECT T2.Party, COUNT(*) FROM party AS T1 JOIN election AS T2 ON T1.Party_ID = T2.Party GROUP BY T2.Party
medium gold: SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party

medium pred: SELECT T2.Name FROM Staff AS T1 JOIN Tourist_Attractions AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = "US museum"
medium gold: SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  "US museum"

hard pred: SELECT cName FROM College WHERE enr > (SELECT MAX(enr) FROM College WHERE state = 'FL')
hard gold: SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')

eval_err_num:67
medium pred: SELECT count(*) FROM list WHERE classroom = [classroom number]
medium gold: SELECT count(*) ,  classroom FROM list GROUP BY classroom

hard pred: SELECT Rank FROM captain WHERE Ship_ID NOT IN (SELECT Ship_ID FROM Ship WHERE Class = 'Third-rate ship of the line')
hard gold: SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'

eval_err_num:68
hard pred: SELECT T1.title FROM movie AS T1 JOIN genre AS T2 ON T1.mid = T2.mid WHERE T2.genre = 'Sci-Fi' AND T1.release_year = 2010
hard gold: SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  "Sci-Fi" AND t3.release_year  =  2010;

eval_err_num:69
extra pred: SELECT t2.authorid, COUNT(t2.authorid) AS num_papers FROM writes AS t2 JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN paperdataset AS t4 ON t4.paperid = t3.paperid JOIN dataset AS t1 ON t1.datasetid = t4.datasetid WHERE t1.datasetname = "ImageNet" GROUP BY t2.authorid ORDER BY num_papers DESC;
extra gold: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t2.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t1.datasetname  =  "ImageNet" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC;

medium pred: SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num GROUP BY T1.stu_num HAVING COUNT(DISTINCT T2.class_code) = 1
medium gold: SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1

hard pred: SELECT salary FROM salary WHERE year = 2010 OR year = 2001
hard gold: SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001

medium pred: SELECT DISTINCT p.paperId FROM paper AS p JOIN writes AS w ON p.paperId = w.paperId JOIN author AS a ON w.authorId = a.authorId WHERE a.authorName = "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

eval_err_num:70
hard pred: SELECT T1.director, T2.title, T2.stars FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T1.director IS NOT NULL AND T2.stars = (SELECT MAX(stars) FROM Rating WHERE mID IN (SELECT mID FROM Movie WHERE director = T1.director)) ORDER BY T1.director
hard gold: SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != "null" GROUP BY director

eval_err_num:71
medium pred: SELECT count(DISTINCT t3.Position) FROM Club AS t1 JOIN Member_of_club AS t2 ON t1.ClubID = t2.ClubID WHERE t1.ClubName = "Bootup Baltimore"
medium gold: SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  "Bootup Baltimore"

extra pred: SELECT DISTINCT t2.venueName FROM venue AS t2 JOIN paper AS t1 ON t2.venueId = t1.venueId JOIN paperkeyphrase AS t3 ON t1.paperId = t3.paperId JOIN keyphrase AS t4 ON t3.keyphraseId = t4.keyphraseId WHERE t4.keyphraseName = "NLP" GROUP BY t2.venueName ORDER BY COUNT(t1.paperId) DESC;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "NLP" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;

extra pred: SELECT capital FROM state WHERE state_name = (SELECT state_name FROM highlow WHERE highest_elevation = (SELECT MAX(highest_elevation) FROM highlow));
extra gold: SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );

extra pred: SELECT employees.first_name, employees.last_name FROM employees JOIN departments ON employees.department_id = departments.department_id WHERE departments.department_id = 70 OR departments.department_id = 90
extra gold: SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90

extra pred: SELECT COUNT(DISTINCT t3.paperId) FROM writes AS t1 JOIN author AS t2 ON t1.authorId = t2.authorId JOIN writes AS t3 ON t3.paperId = t1.paperId JOIN paper AS t4 ON t4.paperId = t3.paperId WHERE t2.authorName = "Noah Smith" AND t4.year >= 2009;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname != "Noah Smith" AND t3.year  >  2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname LIKE "Noah Smith" );

hard pred: SELECT count(DISTINCT t2.ClubID) FROM Student AS t1 JOIN Member_of_club AS t2 ON t1.StuID = t2.StuID WHERE t1.LName = "Smith" AND t1.FName = "Linda"
hard gold: SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  "Linda" AND t3.lname  =  "Smith"

eval_err_num:72
hard pred: SELECT t3.title, t3.year, t4.authorName, t2.numCiting FROM paper AS t3 JOIN paperKeyphrase AS t1 ON t3.paperId = t1.paperId JOIN keyphrase AS t2 ON t1.keyphraseId = t2.keyphraseId JOIN writes AS t4 ON t3.paperId = t4.paperId WHERE t2.keyphraseName = "dependent types" ORDER BY t2.numCiting DESC;
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "dependent types";

easy pred: SELECT DISTINCT detention_type_code FROM Ref_Detention_Type
easy gold: SELECT DISTINCT detention_type_code FROM Detention

medium pred: SELECT country.country FROM country JOIN city ON country.country_id = city.country_id GROUP BY country.country_id HAVING COUNT(city.city_id) >= 3
medium gold: SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3

eval_err_num:73
medium pred: SELECT S.Name, S.Main_Services FROM station AS S JOIN ( SELECT Station_ID, Total_Passengers FROM station ORDER BY Total_Passengers DESC LIMIT 3 ) AS T ON S.Station_ID = T.Station_ID
medium gold: SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3

medium pred: SELECT count(friend) FROM PersonFriend WHERE name = 'Dan'
medium gold: SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'

extra pred: SELECT T1.player_api_id FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = "left" AND T1.height >= 180 AND T1.height <= 190
extra gold: SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  "left"

eval_err_num:74
easy pred: SELECT avg(training_hours) FROM Player
easy gold: SELECT avg(HS) FROM Player

extra pred: SELECT t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = "bay area" AND t1.food_type = "american" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = "bay area" AND t1.food_type = "american");
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

hard pred: SELECT Employee_ID FROM Employees WHERE Employee_ID NOT IN (SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed)
hard gold: SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed

medium pred: SELECT T1.cName FROM College AS T1 JOIN Tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' AND T2.pPos = 'goalie'
medium gold: SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'

hard pred: SELECT customer_name FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders)
hard gold: SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id

medium pred: SELECT T1.Location FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID GROUP BY T1.Location ORDER BY count(*) DESC LIMIT 1
medium gold: SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1

extra pred: SELECT t1.name, t2.house_number, t2.street_name FROM restaurant AS t1 JOIN location AS t2 ON t1.id = t2.restaurant_id WHERE t1.food_type = "arabic" AND t2.city_name = "mountain view" AND t1.rating > 2.5;
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "mountain view" AND t1.food_type  =  "arabic" AND t1.rating  >  2.5;

eval_err_num:75
medium pred: SELECT "Date_of_ceremony", "Result" FROM music_festival
medium gold: SELECT Date_of_ceremony ,  RESULT FROM music_festival

hard pred: SELECT DISTINCT artist_name FROM artist WHERE artist_name IN (SELECT artist_name FROM song WHERE languages = "English") AND artist_name NOT IN (SELECT artist_name FROM song WHERE rating > 8)
hard gold: SELECT DISTINCT artist_name FROM song WHERE languages  =  "english" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8

medium pred: SELECT city.city_name, city.population FROM city JOIN state ON city.state_name = state.state_name WHERE state.state_name = "wisconsin" AND city.population > 100000 ORDER BY city.population DESC;
medium gold: SELECT population FROM city WHERE population  >  150000 AND state_name  =  "wisconsin";

medium pred: SELECT Name, Score FROM wine WHERE Grape IN (SELECT Grape FROM grapes WHERE Color = "White")
medium gold: SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  "White"

medium pred: SELECT Position FROM match_season AS T1 JOIN player AS T2 ON T1.Player = T2.Player WHERE T2.Team = (SELECT Team_id FROM team WHERE Name = 'Ryley Goldner')
medium gold: SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  "Ryley Goldner"

hard pred: SELECT Name FROM wine WHERE Winery < "Brander"
hard gold: SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  "Brander")

medium pred: SELECT T1.date_incident_start, T1.date_incident_end FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code WHERE T2.incident_type_code = "NOISE"
medium gold: SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  "NOISE"

hard pred: SELECT name FROM instructor WHERE salary > (SELECT max(salary) FROM instructor WHERE dept_name = 'Biology')
hard gold: SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')

medium pred: SELECT sum(SALARY), DEPARTMENT_ID FROM employees GROUP BY DEPARTMENT_ID HAVING COUNT(*) > 2
medium gold: SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2

medium pred: SELECT student.name, department.dept_name FROM student JOIN department ON student.dept_name = department.dept_name ORDER BY student.tot_cred ASC
medium gold: SELECT name ,  dept_name FROM student ORDER BY tot_cred

medium pred: SELECT DISTINCT COUNT(t1.paperid) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid = t1.venueid WHERE t1.year = YEAR(CURDATE()) - 1 AND t2.venuename = "nature communications";
medium gold: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications";

eval_err_num:76
extra pred: SELECT T1.FirstName, T1.LastName FROM list AS T1 LEFT JOIN teachers AS T2 ON T1.Classroom = T2.Classroom WHERE T1.Grade = 1 AND (T2.FirstName != "OTHA" OR T2.LastName != "MOYER")
extra gold: SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  "OTHA" AND T2.lastname  =  "MOYER"

extra pred: SELECT highest_point FROM highlow WHERE state_name = ( SELECT state_name FROM state WHERE area = ( SELECT MIN ( area ) FROM state ) );
extra gold: SELECT t2.highest_point FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MIN ( area ) FROM state );

medium pred: SELECT T1.Employee_ID, COUNT(*) FROM Employees AS T1 JOIN Documents_to_be_Destroyed AS T2 ON T1.Employee_ID = T2.Destruction_Authorised_by_Employee_ID GROUP BY T1.Employee_ID
medium gold: SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID

eval_err_num:77
easy pred: SELECT There is no SQL query provided to answer the question "how tall is guadalupe peak".
easy gold: SELECT highest_elevation FROM highlow WHERE highest_point  =  "guadalupe peak";

extra pred: SELECT name FROM Person WHERE age > 40 AND name NOT IN (SELECT name FROM PersonFriend WHERE year < 30)
extra gold: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)

extra pred: SELECT t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name JOIN LOCATION AS t3 ON t1.id = t3.restaurant_id WHERE t2.region = "bay area" AND t1.food_type = "american" AND t1.rating = (SELECT MAX(t1.rating) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name = t2.city_name WHERE t2.region = "bay area" AND t1.food_type = "american");
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

eval_err_num:78
medium pred: SELECT min(HS), pPos FROM Player GROUP BY pPos
medium gold: SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos

hard pred: SELECT Customer_Details FROM Customers WHERE Customer_ID NOT IN (SELECT Customer_ID FROM Customer_Policies)
hard gold: SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id

medium pred: SELECT AllergyType, COUNT(Allergy) FROM Allergy_Type GROUP BY AllergyType
medium gold: SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype

eval_err_num:79
extra pred: SELECT t3.year, COUNT(t6.citingPaperId) AS numCitations FROM author AS t1 JOIN writes AS t2 ON t1.authorId = t2.authorId JOIN paper AS t3 ON t2.paperId = t3.paperId JOIN cite AS t6 ON t3.paperId = t6.citedPaperId WHERE t1.authorName = "Luke Zettlemoyer" GROUP BY t3.year;
extra gold: SELECT DISTINCT COUNT ( t4.citedpaperid )  ,  t3.year FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "luke zettlemoyer" GROUP BY t3.year;

extra pred: SELECT T1.Fname FROM Faculty AS T1 JOIN Faculty_Participates_in AS T2 ON T1.FacID = T2.FacID JOIN Activity AS T3 ON T2.actid = T3.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'
extra gold: SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'

hard pred: SELECT Appelation FROM appellations WHERE Appelation IN ( SELECT Appelation FROM wine WHERE Year > 2008 ) AND Area != 'Central Coast'
hard gold: SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  "Central Coast"

hard pred: SELECT T3.amenity_name FROM Dorm AS T1 JOIN Has_amenity AS T2 ON T1.dormid = T2.dormid JOIN Dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name
hard gold: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'

medium pred: SELECT T1.account_id, T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
medium gold: SELECT account_id ,  customer_id ,  account_name FROM Accounts

hard pred: SELECT characteristic_name FROM Characteristics GROUP BY characteristic_name HAVING COUNT(*) >= 2
hard gold: SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2

medium pred: SELECT Location FROM school WHERE School_ID IN (SELECT School_ID FROM player GROUP BY School_ID HAVING COUNT(*) > 1)
medium gold: SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1

extra pred: SELECT title, film_id FROM film WHERE rental_rate = 0.99 AND film_id IN (SELECT film_id FROM inventory GROUP BY film_id HAVING COUNT(*) < 3)
extra gold: SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3

medium pred: SELECT sum(salary) FROM salary WHERE team_id = 'Boston Red Stockings' AND year = 2010
medium gold: SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010

eval_err_num:80
extra pred: SELECT DISTINCT p.paperId FROM paper p JOIN venue v ON p.venueId = v.venueId JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId WHERE v.venueName = "NIPS" AND k.keyphraseName = "TAIL";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS";

extra pred: SELECT T1.Denomination FROM school AS T1 JOIN player AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.Denomination ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:81
hard pred: SELECT T2.product FROM store AS T1 JOIN store_product AS T2 ON T1.Store_ID = T2.Store_ID WHERE T1.Store_Name = "Miramichi"
hard gold: SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  "Miramichi"

eval_err_num:82
medium pred: SELECT T1.problem_description FROM Problem_Log AS T1 JOIN Staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop"
medium gold: SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop"

eval_err_num:83
extra pred: SELECT Name FROM furniture WHERE Price_in_Dollar < (SELECT max(Price_in_Dollar) FROM furniture_manufacte)
extra gold: SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)

extra pred: SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id WHERE T2.sent_date < '1986-08-26 20:49:27' AND T1.grant_end_date > '1989-03-16 18:27:16'
extra gold: SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'

eval_err_num:84
extra pred: SELECT DISTINCT p.paperId FROM paper p JOIN venue v ON p.venueId = v.venueId JOIN writes w ON p.paperId = w.paperId JOIN author a ON w.authorId = a.authorId WHERE a.authorName = "Richard Ladner" AND v.venueName = "chi";
extra gold: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi";

eval_err_num:85
easy pred: SELECT T2.Country FROM stadium AS T1 JOIN country AS T2 ON T1.Country = T2.Country GROUP BY T2.Country HAVING count(*) <= 3
easy gold: SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3

hard pred: SELECT DISTINCT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = "Liwen Xiong" AND t3.year = YEAR(CURDATE())-1;
hard gold: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015;

easy pred: SELECT count(*) FROM advisor
easy gold: SELECT count(DISTINCT s_id) FROM advisor

eval_err_num:86
extra pred: SELECT DISTINCT p.paperId FROM paper p JOIN writes w ON p.paperId = w.paperId JOIN author a ON w.authorId = a.authorId WHERE a.authorName = "Peter Mertens" OR a.authorName = "Dina Barbian";
extra gold: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";

easy pred: SELECT rID FROM Reviewer WHERE rID NOT IN (SELECT rID FROM Rating WHERE stars = 4)
easy gold: SELECT rID FROM Rating WHERE stars != 4

eval_err_num:87
extra pred: SELECT t3.authorid, t3.authorname, COUNT(t4.paperid) as num_papers FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid = t2.keyphraseid JOIN paper AS t4 ON t4.paperid = t1.paperid JOIN writes AS t3 ON t3.paperid = t4.paperid WHERE t2.keyphrasename = "syntactic parsing" GROUP BY t3.authorid ORDER BY num_papers DESC LIMIT 1;
extra gold: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "syntactic parsing" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;

hard pred: SELECT t1.name, t1.full_address, t1.city, t1.state FROM business AS t1 JOIN review AS t2 ON t1.business_id = t2.business_id JOIN user AS t3 ON t2.user_id = t3.user_id WHERE t3.name = "Niloofar";
hard gold: SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t3.name  =  "Niloofar";

hard pred: SELECT Title FROM Songs WHERE SongId NOT IN (SELECT SongId FROM Vocals WHERE Type = "lead")
hard gold: SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  "lead"

medium pred: SELECT customer_id, customer_details, date_moved_in FROM Customers JOIN Customer_Events ON Customers.customer_id = Customer_Events.customer_id JOIN Residents ON Customer_Events.resident_id = Residents.resident_id AND Customer_Events.property_id = Residents.property_id AND Customer_Events.date_moved_in = Residents.date_moved_in
medium gold: SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id

easy pred: SELECT Velocity FROM flight WHERE Pilot = 'Thompson'
easy gold: SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'

hard pred: SELECT sum(revenue) FROM manufacturers WHERE revenue > (SELECT max(revenue) FROM manufacturers WHERE headquarter = 'Austin')
hard gold: SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')

eval_err_num:88
medium pred: SELECT resident_details FROM Residents WHERE resident_details LIKE "%Miss%"
medium gold: SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'

medium pred: SELECT T2.Name FROM Staff AS T1 JOIN Tourist_Attractions AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = "US museum"
medium gold: SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  "US museum"

hard pred: SELECT name FROM Person ORDER BY age DESC LIMIT 1
hard gold: SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)

eval_err_num:89
extra pred: SELECT DISTINCT p.paperId, p.title FROM paper p JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId JOIN writes w ON p.paperId = w.paperId JOIN author a ON w.authorId = a.authorId WHERE a.authorName = "brian curless" AND k.keyphraseName = "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

eval_err_num:90
medium pred: SELECT fault_description, fault_status FROM Fault_Log
medium gold: SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id

hard pred: SELECT river_name FROM river WHERE LENGTH = (SELECT MIN(LENGTH) FROM river WHERE country_name = 'USA');
hard gold: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );

medium pred: SELECT song.song_name, song.rating, artist.artist_name FROM song JOIN artist ON song.artist_name = artist.artist_name WHERE song.languages = 'English' ORDER BY song.rating DESC
medium gold: SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   "english" ORDER BY rating

extra pred: SELECT T2.product_id, T1.product_details FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id ORDER BY SUM(order_quantity) DESC LIMIT 1
extra gold: SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1

extra pred: SELECT song_name FROM song JOIN files ON song.f_id = files.f_id WHERE files.formats = 'mp3' AND song.resolution < 1000
extra gold: SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  "mp3" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000

extra pred: SELECT t1.customer_name FROM Customers AS t1 JOIN Customers_Policies AS t2 ON t1.Customer_ID = t2.Customer_ID JOIN Available_Policies AS t3 ON t2.Policy_ID = t3.Policy_ID JOIN First_Notification_of_Loss AS t4 ON t2.Customer_ID = t4.Customer_ID AND t2.Policy_ID = t4.Policy_ID JOIN Services AS t5 ON t4.Service_ID = t5.Service_ID WHERE t5.Service_name = "Close a policy" OR t5.Service_name = "Upgrade a policy"
extra gold: SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  "Close a policy" OR t3.service_name  =  "Upgrade a policy"

eval_err_num:91
extra pred: SELECT T1.customer_name, T1.payment_method FROM Customers AS T1 JOIN Mailshot_Customers AS T2 ON T1.customer_id = T2.customer_id JOIN Mailshot_Campaigns AS T3 ON T2.mailshot_id = T3.mailshot_id WHERE T3.outcome_code = 'Order' AND T1.customer_id IN ( SELECT customer_id FROM Mailshot_Customers JOIN Mailshot_Campaigns ON Mailshot_Customers.mailshot_id = Mailshot_Campaigns.mailshot_id WHERE outcome_code = 'No Response' )
extra gold: SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'

easy pred: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name GROUP BY T1.name HAVING count(*) = 1
easy gold: SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1

hard pred: SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT President_Vote FROM Voting_record) AND Advisor != 2192
hard gold: SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  "2192"

extra pred: SELECT T1.rid FROM routes AS T1 JOIN airports AS T2 ON T1.src_apid = T2.apid JOIN airports AS T3 ON T1.dst_apid = T3.apid WHERE T2.country = 'United States' AND T3.country = 'United States'
extra gold: SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')

eval_err_num:92
hard pred: SELECT T2.name FROM film AS T1 JOIN film_category AS T2 ON T1.film_id = T2.film_id WHERE T1.title = 'HUNGER ROOF'
hard gold: SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'

extra pred: SELECT T1.staff_name, T1.staff_gender FROM Staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Sales Person" AND T1.staff_id NOT IN ( SELECT T1.staff_id FROM Staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Clerical Staff" )
extra gold: SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  "Sales Person" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  "Clerical Staff"

extra pred: SELECT count(*) FROM Products WHERE Manufacturer != (SELECT Code FROM Manufacturers WHERE Name = 'Sony')
extra gold: SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')

extra pred: SELECT DISTINCT t2.paperId FROM writes AS t2 JOIN author AS t1 ON t2.authorId = t1.authorId JOIN cite AS t3 ON t3.citingPaperId = t2.paperId JOIN author AS t4 ON t4.authorId = t3.citedPaperId WHERE t4.authorName = "Daniel Jurafsky";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky";

eval_err_num:93
hard pred: SELECT T1.customer_id, COUNT(*) AS num_cards FROM Customers_Cards AS T1 GROUP BY T1.customer_id ORDER BY num_cards DESC LIMIT 1
hard gold: SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:94
extra pred: SELECT T2.Winery FROM wine AS T1 JOIN grapes AS T2 ON T1.Grape = T2.Grape WHERE T2.Color = "white" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3
extra gold: SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  "White" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3

extra pred: SELECT state_name FROM border_info WHERE border = "idaho" AND state_name IN (SELECT state_name FROM highlow WHERE lowest_point = (SELECT MIN(lowest_elevation) FROM highlow));
extra gold: SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "idaho" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "idaho" );

hard pred: SELECT count(*) FROM Club AS t1 JOIN Member_of_club AS t2 ON t1.ClubID = t2.ClubID JOIN Student AS t3 ON t2.StuID = t3.StuID WHERE t3.LName = "Tai" AND t3.FName = "Eric"
hard gold: SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  "Eric" AND t3.lname  =  "Tai"

extra pred: SELECT t6.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid = t1.aid JOIN movie AS t5 ON t5.mid = t4.msid JOIN directed_by AS t2 ON t5.mid = t2.msid JOIN director AS t3 ON t3.did = t2.did JOIN made_by AS t7 ON t5.mid = t7.msid JOIN producer AS t6 ON t6.pid = t7.pid WHERE t1.name = "Kate Winslet";
extra gold: SELECT t1.name FROM CAST AS t3 JOIN actor AS t2 ON t3.aid  =  t2.aid JOIN movie AS t5 ON t5.mid  =  t3.msid JOIN made_by AS t4 ON t5.mid  =  t4.msid JOIN producer AS t1 ON t1.pid  =  t4.pid WHERE t2.name  =  "Kate Winslet";

medium pred: SELECT SUM(Undergraduate) FROM discipline_enrollments AS T1 JOIN campuses AS T2 ON T1.Campus = T2.Id WHERE T2.Campus = "San Jose State University"
medium gold: SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  "San Jose State University"

eval_err_num:95
medium pred: SELECT COUNT(DISTINCT Major) AS num_majors, COUNT(DISTINCT city_code) AS num_city_codes FROM Student
medium gold: SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student

medium pred: SELECT count(*) FROM list WHERE Classroom IN (SELECT Classroom FROM teachers WHERE FirstName = "TARRING" AND LastName = "LEIA")
medium gold: SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  "TARRING" AND T2.lastname  =  "LEIA"

eval_err_num:96
hard pred: SELECT DISTINCT p.paperId FROM paper p JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId WHERE k.keyphraseName = "Question Answering";
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering";

eval_err_num:97
extra pred: SELECT t2.name FROM writes AS t2 JOIN author AS t1 ON t2.aid = t1.aid JOIN publication AS t3 ON t2.pid = t3.pid WHERE t1.name = "H. V. Jagadish" AND t3.year > 2000;
extra gold: SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t5.year  >  2000;

medium pred: SELECT Name FROM actor WHERE Musical_ID IN (SELECT Musical_ID FROM musical WHERE Name = 'The Phantom of the Opera')
medium gold: SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  "The Phantom of the Opera"

medium pred: SELECT sum(balance) FROM SAVINGS WHERE custid NOT IN (SELECT custid FROM ACCOUNTS WHERE name = 'Brown')
medium gold: SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'

extra pred: SELECT t3.title, t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = "deep learning" ORDER BY t3.year DESC;
extra gold: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC;

hard pred: SELECT Name FROM storm WHERE Storm_ID NOT IN (SELECT Storm_ID FROM affected_region GROUP BY Storm_ID HAVING COUNT(*) >= 2)
hard gold: SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2

hard pred: SELECT t1.authorName FROM author AS t1 JOIN writes AS t2 ON t1.authorId = t2.authorId JOIN paper AS t3 ON t2.paperId = t3.paperId JOIN venue AS t4 ON t3.venueId = t4.venueId WHERE t3.year = 2016 AND t4.venueName = "acl";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl";

eval_err_num:98
extra pred: SELECT COUNT(DISTINCT Patient.SSN) FROM Patient LEFT JOIN Prescribes ON Patient.SSN = Prescribes.Patient LEFT JOIN Medication ON Prescribes.Medication = Medication.Code WHERE Medication.Name != 'Procrastin-X' OR Medication.Name IS NULL
extra gold: SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )

medium pred: SELECT SUM(t4.count) FROM category AS t2 JOIN business AS t1 ON t2.business_id = t1.business_id JOIN checkin AS t4 ON t4.business_id = t1.business_id WHERE t1.name = "Cafe Zinho" AND t4.day = "Friday";
medium gold: SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  "Cafe Zinho" AND t2.day  =  "Friday";

hard pred: SELECT capital FROM state WHERE population = (SELECT MAX(population) FROM state)
hard gold: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );

extra pred: SELECT DISTINCT t3.year FROM paper AS t3 JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid JOIN venue AS t2 ON t3.venueid = t2.venueid WHERE t1.authorname = "Michael Stonebraker" AND t2.venuename = "VLDB" ORDER BY t3.year LIMIT 1;
extra gold: SELECT DISTINCT t3.year FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Michael Stonebraker" AND t4.venuename  =  "VLDB" ORDER BY t3.year;

extra pred: SELECT DISTINCT dataset.datasetName FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperDataset ON paper.paperId = paperDataset.paperId JOIN dataset ON paperDataset.datasetId = dataset.datasetId WHERE author.authorName = "jitendra malik";
extra gold: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik";

easy pred: SELECT * FROM albums ORDER BY title ASC
easy gold: SELECT title FROM albums ORDER BY title;

hard pred: SELECT Product_ID FROM Invoice_Items GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1

medium pred: SELECT count(*) FROM Participates_in AS T1 JOIN Student AS T2 ON T1.stuid = T2.StuID WHERE T2.Fname = "Mark" AND T2.Lname = "Giuliano"
medium gold: SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  "Mark" AND T1.lname  =  "Giuliano"

medium pred: SELECT first_name, last_name FROM employees ORDER BY birth_date ASC LIMIT 1
medium gold: SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;

easy pred: SELECT count(*) FROM department WHERE dept_name IN (SELECT dept_name FROM course)
easy gold: SELECT count(DISTINCT dept_name) FROM course

eval_err_num:99
medium pred: SELECT MAX(customer_code) AS largest_customer_code, MIN(customer_code) AS smallest_customer_code FROM Customers;
medium gold: SELECT max(customer_code) ,  min(customer_code) FROM Customers

easy pred: SELECT * FROM business WHERE rating = 3.5
easy gold: SELECT name FROM business WHERE rating  =  3.5;

medium pred: SELECT flno FROM flight WHERE aid IN (SELECT aid FROM aircraft WHERE name = "Airbus A340-300")
medium gold: SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  "Airbus A340-300"

easy pred: SELECT border FROM border_info WHERE state_name = "ohio";
easy gold: SELECT traverse FROM river WHERE river_name  =  "ohio";

eval_err_num:100
easy pred: SELECT DEPARTMENT_ID FROM employees WHERE COMMISSION_PCT IS NOT NULL GROUP BY DEPARTMENT_ID HAVING COUNT(*) > 10
easy gold: SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10

extra pred: SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T1.Area ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1

hard pred: SELECT role FROM cast AS T1 JOIN movie AS T2 ON T1.msid = T2.mid WHERE T2.title = "Daddy Long Legs"
hard gold: SELECT t2.role FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  "Daddy Long Legs";

eval_err_num:101
extra pred: SELECT avg(R.stars), M.title FROM Movie M JOIN Rating R ON M.mID = R.mID WHERE M.year = (SELECT MIN(year) FROM Movie)
extra gold: SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)

eval_err_num:102
hard pred: SELECT T2.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_ID = T2.cust_ID GROUP BY T2.cust_ID ORDER BY sum(amount) DESC
hard gold: SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)

hard pred: SELECT DISTINCT t3.paperid, t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = "Question Answering";
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering";

eval_err_num:103
medium pred: SELECT "International_Passengers", "Domestic_Passengers" FROM airport WHERE "Airport_Name" = "London Heathrow"
medium gold: SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  "London Heathrow"

eval_err_num:104
extra pred: SELECT title, film_id FROM film WHERE rental_rate = 0.99 AND inventory_id < 3
extra gold: SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3

eval_err_num:105
extra pred: SELECT t3.authorId, COUNT(t4.citingPaperId) AS numCitations FROM writes AS t2 JOIN author AS t1 ON t2.authorId = t1.authorId JOIN cite AS t4 ON t2.paperId = t4.citedPaperId JOIN writes AS t3 ON t3.paperId = t4.citingPaperId WHERE t1.authorName = "Daniel A Reed" GROUP BY t3.authorId ORDER BY numCitations DESC LIMIT 1
extra gold: SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  "Daniel A Reed" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;

extra pred: SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Confirmed" AND T2.apt_number IN (SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Provisional")
extra gold: SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  "Confirmed" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  "Provisional"

hard pred: SELECT apt_type_code, AVG(room_count) FROM Apartments GROUP BY apt_type_code ORDER BY AVG(room_count) DESC LIMIT 3
hard gold: SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3

extra pred: SELECT T2.country, count(*) FROM airlines AS T1 JOIN airports AS T2 ON T1.alid = T2.apid GROUP BY T2.country ORDER BY count(*) DESC
extra gold: SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC

hard pred: SELECT Account_Details FROM Accounts WHERE Account_Details LIKE "%5%" OR Account_Details = (SELECT MAX(Account_Details) FROM Accounts)
hard gold: SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE "%5%"

medium pred: SELECT sum(crs_credit), dept_name FROM course JOIN department ON course.dept_code = department.dept_code GROUP BY dept_name
medium gold: SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code

extra pred: SELECT t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id = t2.restaurant_id WHERE t2.city_name = "san francisco" AND t1.food_type = "french" ORDER BY t1.rating DESC LIMIT 1;
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.food_type  =  "french" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.food_type  =  "french" );

hard pred: SELECT t3.title FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid = t2.paperid JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid WHERE t1.keyphrasename = "Question Answering";
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering";

extra pred: SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid = t3.keyphraseid JOIN writes AS t4 ON t4.paperid = t5.paperid JOIN paper AS t2 ON t4.paperid = t2.paperid JOIN author AS t1 ON t4.authorid = t1.authorid JOIN venue AS t6 ON t6.venueid = t2.venueid WHERE t1.authorname LIKE "Ranjit Jhala" AND t3.keyphrasename = "Liquid Haskell";
extra gold: SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN paper AS t3 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname LIKE "Ranjit Jhala" AND t5.keyphrasename  =  "Liquid Haskell";

medium pred: SELECT Projects.Project_ID, Projects.Project_Details FROM Projects JOIN Documents ON Projects.Project_ID = Documents.Project_ID GROUP BY Projects.Project_ID HAVING COUNT(Documents.Document_ID) > 2
medium gold: SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2

eval_err_num:106
medium pred: SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS full_name, SALARY FROM employees WHERE COMMISSION_PCT IS NULL
medium gold: SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  "null"

eval_err_num:107
medium pred: SELECT s.Name, s.Type, s.Flag FROM Ship s WHERE s.Built_Year = (SELECT MAX(Built_Year) FROM Ship)
medium gold: SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1

extra pred: SELECT b.name FROM buildings AS b JOIN Office_locations AS o ON b.id = o.building_id GROUP BY b.name ORDER BY COUNT(o.company_id) DESC LIMIT 1
extra gold: SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:108
hard pred: SELECT T3.compatible_since_year FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox' AND T3.name = 'Internet Explorer'
hard gold: SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id WHERE T3.name  =  'CACHEbox' AND T2.name  =  'Internet Explorer'

eval_err_num:109
medium pred: SELECT COUNT(*) FROM paper p JOIN venue v ON p.venueId = v.venueId WHERE v.venueName = "ACL" AND p.year = 2015;
medium gold: SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "ACL";

hard pred: SELECT city_name FROM city WHERE population = (SELECT MAX(population) FROM city);
hard gold: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );

eval_err_num:110
extra pred: SELECT LName FROM Student WHERE (Sex = 'female' OR (Sex = 'male' AND Age < 20)) OR city_code = 'BAL'
extra gold: SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20

easy pred: SELECT count(*) FROM postseason WHERE team_id_winner = 'Boston Red Stockings' OR team_id_loser = 'Boston Red Stockings'
easy gold: SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );

extra pred: SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:111
medium pred: SELECT Location, Name FROM match JOIN aircraft ON match.Winning_Aircraft = aircraft.Aircraft_ID
medium gold: SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft

hard pred: SELECT state_name FROM highlow WHERE highest_point > (SELECT highest_point FROM highlow WHERE state_name = "colorado");
hard gold: SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  "colorado" );

medium pred: SELECT T2.name, count(*) FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T2.name
medium gold: SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid

hard pred: SELECT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = "dependent types"
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "dependent types";

medium pred: SELECT Time FROM Elimination WHERE Wrestler_ID = "Punk" OR Wrestler_ID = "Orton"
medium gold: SELECT TIME FROM elimination WHERE Eliminated_By  =  "Punk" OR Eliminated_By  =  "Orton"

extra pred: SELECT name FROM Person WHERE job = 'student' ORDER BY age DESC LIMIT 1
extra gold: SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )

hard pred: SELECT Role_Code, COUNT(*) FROM Employees GROUP BY Role_Code ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:112
extra pred: SELECT T1.customer_name, T1.customer_phone FROM Customers AS T1 LEFT JOIN Mailshot_Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.mailshot_id IS NULL
extra gold: SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)

hard pred: SELECT DISTINCT song_name FROM song WHERE resolution > (SELECT resolution FROM song WHERE languages = 'English')
hard gold: SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  "english")

extra pred: SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.ID = T2.ID JOIN prereq AS T3 ON T2.course_id = T3.prereq_id JOIN course AS T4 ON T3.course_id = T4.course_id WHERE T4.title = "International Finance";
extra gold: SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')

extra pred: SELECT T1.product_name, T1.product_price FROM Products AS T1 JOIN Actual_Order_Products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1

easy pred: SELECT count(DISTINCT amenid) FROM Dorm_amenity
easy gold: SELECT count(*) FROM dorm_amenity

eval_err_num:113
extra pred: SELECT DISTINCT p.paperId FROM paper p JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId JOIN venue v ON p.venueId = v.venueId WHERE k.keyphraseName = "TAIL" AND v.venueName = "NIPS";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS";

eval_err_num:114
hard pred: SELECT COUNT(DISTINCT p.paperId) FROM paper p JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId WHERE k.keyphraseName = "convolutional neural networks" AND p.year = 2016;
hard gold: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "convolutional neural networks" AND t3.year  =  2016;

eval_err_num:115
extra pred: SELECT T1.staff_name, T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id = T2.recorded_by_staff_id LEFT JOIN Engineer_Visits AS T3 ON T2.fault_log_entry_id = T3.fault_log_entry_id WHERE T3.engineer_visit_id IS NULL
extra gold: SELECT T1.staff_name ,  T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id  =  T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name ,  T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id  =  T4.contact_staff_id

medium pred: SELECT Winery FROM wine ORDER BY Score DESC LIMIT 1
medium gold: SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1

extra pred: SELECT avg(age), count(*) FROM Student GROUP BY city_code, sex WHERE sex = 'M'
extra gold: SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code

eval_err_num:116
medium pred: SELECT Owner FROM channel ORDER BY Rating_in_percent/Share_in_percent DESC LIMIT 1
medium gold: SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1

medium pred: SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country JOIN player AS T3 ON T2.Player = T3.Player WHERE T2.Position = "Defender"
medium gold: SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  "Defender"

extra pred: SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1

medium pred: SELECT COUNT(*) FROM paper WHERE venueId IN (SELECT venueId FROM venue WHERE venueName = "ACL") AND year = 2015;
medium gold: SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "ACL";

eval_err_num:117
hard pred: SELECT * conference papers of subhasis chaudhuri FROM writes AS t2 JOIN author AS t1 ON t2.authorId = t1.authorId JOIN paper AS t3 ON t2.paperId = t3.paperId WHERE t1.authorName = "subhasis chaudhuri"; * list papers by subhasis chaudhuri FROM writes AS t2 JOIN author AS t1 ON t2.authorId = t1.authorId JOIN paper AS t3 ON t2.paperId = t3.paperId WHERE t1.authorName = "subhasis chaudhuri"; * When did ameet soni publish? SELECT COUNT(t3.paperId), t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorId = t1.authorId JOIN paper AS t3 ON t2.paperId = t3.paperId WHERE t1.authorName = "ameet soni" GROUP BY
hard gold: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "subhasis chaudhuri";

eval_err_num:118
hard pred: SELECT city FROM Customers WHERE city NOT IN (SELECT city FROM Performers)
hard gold: SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID

extra pred: SELECT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid = t3.keyphraseid JOIN writes AS t4 ON t4.paperid = t5.paperid JOIN paper AS t2 ON t4.paperid = t2.paperid JOIN author AS t1 ON t4.authorid = t1.authorid JOIN venue AS t6 ON t6.venueid = t2.venueid WHERE t1.authorname LIKE "Eric C. Kerrigan" AND t3.keyphrasename = "Liquid" AND t6.venuename = "Automatica";
extra gold: SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname  =  "Eric C. Kerrigan" AND t3.keyphrasename  =  "Liquid" AND t6.venuename  =  "Automatica";

extra pred: SELECT Campuses.Campus FROM Campuses JOIN faculty ON Campuses.Id = faculty.Campus WHERE faculty.Year = 2002 GROUP BY Campuses.Campus HAVING MAX(faculty.Faculty) > (SELECT MAX(faculty.Faculty) FROM Campuses JOIN faculty ON Campuses.Id = faculty.Campus WHERE Campuses.County = "Orange")
extra gold: SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  "Orange")

eval_err_num:119
medium pred: SELECT count(*) FROM song WHERE duration = '4:00'
medium gold: SELECT count(*) FROM files WHERE duration LIKE "4:%"

eval_err_num:120
hard pred: SELECT Total_Points FROM gymnast WHERE Gymnast_ID = (SELECT Gymnast_ID FROM people WHERE Age = (SELECT MIN(Age) FROM people))
hard gold: SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1

medium pred: SELECT T1.Name FROM Ship AS T1 JOIN captain AS T2 ON T1.Ship_ID = T2.Ship_ID GROUP BY T1.Name HAVING COUNT(*) > 1
medium gold: SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1

medium pred: SELECT t1.title FROM paper AS t1 JOIN venue AS t2 ON t1.venueId = t2.venueId WHERE t1.year = 2015 AND t2.venueName = "pldi";
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

hard pred: SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id WHERE T2.prereq_id = 'Differential Geometry'
hard gold: SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')

medium pred: SELECT Workshop_Group_ID FROM Drama_Workshop_Groups WHERE Address_ID IN (SELECT Address_ID FROM Addresses WHERE City_Town = "Feliciaberg")
medium gold: SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  "Feliciaberg"

extra pred: SELECT billing_state FROM invoices GROUP BY billing_state ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  "USA" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;

medium pred: SELECT t1.bname FROM bank AS t1 JOIN customer AS t2 ON t1.branch_ID = t2.branch_ID GROUP BY t1.branch_ID ORDER BY count(*) DESC LIMIT 1
medium gold: SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1

medium pred: SELECT T1.zip_code, T2.id FROM weather AS T1 JOIN trip AS T2 ON T1.zip_code = T2.zip_code GROUP BY T1.zip_code, T2.id HAVING AVG(T1.mean_temperature_f) > 60
medium gold: SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60

medium pred: SELECT station.lat, MIN(trip.duration) FROM station JOIN trip ON station.id = trip.end_station_id GROUP BY station.id, station.lat
medium gold: SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id

eval_err_num:121
extra pred: SELECT T1.Fname, T1.Major FROM Student AS T1 LEFT JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID WHERE T2.Allergy IS NULL OR T2.Allergy != 'soy'
extra gold: SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  "Soy")

medium pred: SELECT count(*) FROM CLASS AS T1 JOIN professor AS T2 ON T1.PROF_NUM = T2.EMP_NUM JOIN employee AS T3 ON T2.EMP_NUM = T3.EMP_NUM WHERE T3.EMP_LNAME = 'Graztevski'
medium gold: SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'

hard pred: SELECT song_name FROM song WHERE rating < (SELECT min(rating) FROM song WHERE genre_is = 'blues')
hard gold: SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  "blues")

eval_err_num:122
extra pred: SELECT t3.title FROM paper AS t3 JOIN paperkeyphrase AS t1 ON t1.paperid = t3.paperid JOIN keyphrase AS t2 ON t2.keyphraseid = t1.keyphraseid JOIN author AS t4 ON t4.authorid = t3.authorid JOIN venue AS t5 ON t5.venueid = t3.venueid WHERE t2.keyphrasename = "semantic parsing" AND t4.authorname = "li dong" AND t5.venuename = "acl" AND t3.year = 2016;
extra gold: SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN paper AS t2 ON t2.paperid  =  t5.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "li dong" AND t3.keyphrasename  =  "semantic parsing" AND t2.year  =  2016 AND t6.venuename  =  "acl";

hard pred: SELECT t1.customer_name FROM Customers AS t1 JOIN Customer_Orders AS t2 ON t1.customer_id = t2.customer_id WHERE t1.payment_method_code = "Credit Card" GROUP BY t1.customer_id HAVING COUNT(t2.order_id) > 2
hard gold: SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2

extra pred: SELECT LENGTH FROM river WHERE LENGTH = (SELECT MAX(LENGTH) FROM river WHERE traverse = "texas");
extra gold: SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas";

medium pred: SELECT count(*) FROM Problems WHERE product_id = (SELECT product_id FROM Product WHERE product_name = "voluptatem")
medium gold: SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = "voluptatem"

medium pred: SELECT Orders.order_id, SUM(Order_Items.product_quantity) FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id
medium gold: SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id

extra pred: SELECT Name FROM Tourist_Attractions WHERE Tourist_Attraction_ID IN (SELECT Tourist_Attraction_ID FROM Tourist_Attraction_Features WHERE Feature_ID IN (SELECT Feature_ID FROM Features WHERE Feature_Details = 'Parking' OR Feature_Details = 'Shopping'))
extra gold: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'

extra pred: SELECT GName FROM Video_Games AS VG JOIN Plays_Games AS PG ON VG.GameID = PG.GameID GROUP BY GName ORDER BY SUM(Hours_Played) DESC LIMIT 1
extra gold: SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1

eval_err_num:123
medium pred: SELECT FacID, COUNT(*) FROM Student GROUP BY FacID
medium gold: SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID

medium pred: SELECT Name FROM branch JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID GROUP BY branch.Branch_ID ORDER BY COUNT(*) DESC LIMIT 3
medium gold: SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3

hard pred: SELECT T1.name FROM student AS T1 JOIN department AS T2 ON T1.dept_name = T2.dept_name WHERE T2.dept_name = 'History' ORDER BY T1.tot_cred DESC LIMIT 1
hard gold: SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1

eval_err_num:124
medium pred: SELECT T1.name, COUNT(*) AS num_tweets FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T1.uid HAVING COUNT(*) > 1
medium gold: SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1

extra pred: SELECT Name FROM Nurse AS T1 JOIN Appointment AS T2 ON T1.EmployeeID = T2.PrepNurse OR T1.EmployeeID = T2.Physician GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1

eval_err_num:125
extra pred: SELECT COUNT(DISTINCT t3.title) FROM director AS t2 JOIN directed_by AS t1 ON t2.did = t1.did JOIN movie AS t3 ON t3.mid = t1.msid WHERE t2.name = "Quentin Tarantino" AND (t3.release_year < 2002 OR t3.release_year > 2010);
extra gold: SELECT COUNT ( DISTINCT t4.title  ) FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid WHERE t3.name  =  "Quentin Tarantino" AND t4.release_year  <  2010 AND t4.release_year  >  2002;

medium pred: SELECT SUM(population) FROM state WHERE state_name IN (SELECT border FROM border_info WHERE state_name = "texas");
medium gold: SELECT SUM ( t2.population ) FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  "texas";

easy pred: SELECT birth_city FROM actor WHERE name = "Kevin Spacey";
easy gold: SELECT birth_city FROM director WHERE name  =  "director_name0";

easy pred: SELECT Name FROM Scientists WHERE SSN IN (SELECT Scientist FROM AssignedTo)
easy gold: SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn

eval_err_num:126
medium pred: SELECT `catalog_entry_name` FROM `Catalog_Contents` WHERE `length` < 3 OR `length` > 5
medium gold: SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5

eval_err_num:127
medium pred: SELECT T2.Region_name, count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.Storm_ID = T2.Storm_ID JOIN region AS T3 ON T2.Region_id = T3.Region_id GROUP BY T2.Region_name
medium gold: SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id

extra pred: SELECT T1.Customer_name FROM Customers AS T1 JOIN Customers_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Customer_ID ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT course_id FROM section WHERE semester = 'Fall' AND year = 2009 OR semester = 'Spring' AND year = 2010
extra gold: SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010

easy pred: SELECT DISTINCT paperId FROM paper WHERE year != (SELECT MAX(year) FROM paper);
easy gold: SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;

eval_err_num:128
hard pred: SELECT DISTINCT t2.venueName FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseId = t2.keyphraseId JOIN venue AS t3 ON t1.paperId = t3.venueId WHERE t2.keyphraseName = "Trophic Cascade";
hard gold: SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade";

extra pred: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.year > 40 AND T2.year < 30
extra gold: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)

medium pred: SELECT Name, COUNT(Train_ID) FROM train_station JOIN station ON train_station.Station_ID = station.Station_ID GROUP BY station.Name
medium gold: SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id

hard pred: SELECT mountain_name FROM mountain WHERE country_name = 'USA' AND mountain_altitude = (SELECT MAX(mountain_altitude) FROM mountain WHERE country_name = 'USA');
hard gold: SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );

eval_err_num:129
extra pred: SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME FROM EMPLOYEES WHERE SALARY > (SELECT SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID = 163)
extra gold: SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )

medium pred: SELECT COUNT(DISTINCT paperId) FROM writes WHERE authorId = (SELECT authorId FROM author WHERE authorName = "Christopher D. Manning");
medium gold: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning";

eval_err_num:130
extra pred: SELECT t3.title FROM writer AS t2 JOIN written_by AS t1 ON t2.wid = t1.wid JOIN movie AS t3 ON t3.mid = t1.msid JOIN producer AS t4 ON t4.pid = t3.pid WHERE t2.name = "Woody Allen" AND t4.name = "Woody Allen";
extra gold: SELECT t2.title FROM movie AS t2 JOIN made_by AS t3 ON t2.mid  =  t3.msid JOIN producer AS t1 ON t1.pid  =  t3.pid JOIN written_by AS t5 ON t5.msid  =  t2.mid JOIN writer AS t4 ON t5.wid  =  t4.wid WHERE t1.name  =  "Woody Allen" AND t4.name  =  "Woody Allen";

hard pred: SELECT T1.StuID FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.stuid JOIN Activity AS T3 ON T2.actid = T3.actid WHERE T1.Age < 20
hard gold: SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20

medium pred: SELECT Campus FROM faculty WHERE Year = 2004 AND Faculty BETWEEN 600 AND 1000
medium gold: SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004

hard pred: SELECT Lname FROM Faculty WHERE FacID IN (SELECT FacID FROM Member_of WHERE DNO IN (SELECT DNO FROM Department WHERE DName = 'Computer Science'))
hard gold: SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  "Computer Science"

eval_err_num:131
easy pred: SELECT T1.Reign FROM wrestler AS T1 LEFT JOIN elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T1.Location != 'Tokyo' OR T1.Location != 'Japan'
easy gold: SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != "Tokyo , Japan"

medium pred: SELECT count(DISTINCT dst_apid) FROM routes WHERE airline = 'AA'
medium gold: SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'

eval_err_num:132
medium pred: SELECT count(DISTINCT t1.College) FROM player AS t1 JOIN team AS t2 ON t1.Team = t2.Team_id WHERE t2.Name = "Columbus Crew"
medium gold: SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  "Columbus Crew"

extra pred: SELECT T1.Name FROM storm AS T1 JOIN affected_region AS T2 ON T1.Storm_ID = T2.Storm_ID GROUP BY T1.Storm_ID HAVING COUNT(DISTINCT T2.Region_id) >= 2 AND SUM(T2.Number_city_affected) >= 10
extra gold: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10

medium pred: SELECT Customer_name FROM Customers ORDER BY Customer_ID ASC
medium gold: SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC

hard pred: SELECT T2.course_id, COUNT(T1.student_id), T3.course_name FROM Students AS T1 JOIN Student_Course_Registrations AS T2 ON T1.student_id = T2.student_id JOIN Courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id, T3.course_name
hard gold: SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id

eval_err_num:133
extra pred: SELECT CONCAT(first_name, ' ', last_name) AS full_name, actor_id FROM actor WHERE actor_id = ( SELECT actor_id FROM film_actor GROUP BY actor_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1

medium pred: SELECT T2.Region_name FROM region AS T2 JOIN affected_region AS T1 ON T2.Region_id = T1.Region_id GROUP BY T2.Region_name HAVING COUNT(T1.Storm_ID) >= 2
medium gold: SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2

eval_err_num:134
easy pred: SELECT "Directed_by" FROM film
easy gold: SELECT DISTINCT directed_by FROM film

eval_err_num:135
medium pred: SELECT Software_Platform, COUNT(*) AS Frequency FROM device GROUP BY Software_Platform ORDER BY Frequency DESC
medium gold: SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC

eval_err_num:136
hard pred: SELECT DISTINCT LName FROM Student WHERE StuID IN (SELECT President_Vote FROM Voting_record WHERE Advisor = 8741)
hard gold: SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  "8741"

hard pred: SELECT T3.name FROM procedures AS T3 WHERE T3.cost > 1000 AND T3.code NOT IN ( SELECT T2.treatment FROM trained_in AS T2 JOIN physician AS T1 ON T1.employeeid = T2.physician WHERE T1.name = "John Wen" )
hard gold: SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  "John Wen"

extra pred: SELECT t3.title FROM paper AS t3 JOIN venue AS t4 ON t3.venueId = t4.venueId JOIN writes AS t2 ON t2.paperId = t3.paperId JOIN author AS t1 ON t2.authorId = t1.authorId WHERE t1.authorName = "ali farhadi" AND t3.year = 2016 AND t4.venueName = "eccv";
extra gold: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ali farhadi" AND t3.year  =  2016 AND t4.venuename  =  "eccv";

eval_err_num:137
easy pred: SELECT Employee_ID FROM Documents_to_be_Destroyed WHERE Destruction_Authorised_by_Employee_ID IS NOT NULL
easy gold: SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed

extra pred: SELECT DISTINCT p.title FROM paper AS p JOIN writes AS w ON p.paperId = w.paperId JOIN author AS a ON w.authorId = a.authorId WHERE a.authorName = "Peter Mertens" OR a.authorName = "Dina Barbian";
extra gold: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";

medium pred: SELECT T1.customer_name, T1.customer_details FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "On Road"
medium gold: SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "On Road"

extra pred: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t5 ON t4.authorid = t5.authorid WHERE t5.authorname = "dan klein" AND t3.venueId IN (SELECT venueId FROM venue WHERE venueName = "emnlp");
extra gold: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid JOIN writes AS t5 ON t5.paperid  =  t3.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid WHERE t1.authorname  =  "dan klein" AND t4.venuename  =  "emnlp";

hard pred: SELECT COUNT(DISTINCT Event_ID) FROM Participants_in_Events WHERE Participant_ID IN (SELECT Participant_ID FROM Participants WHERE Participant_Details LIKE "%Dr.%")
hard gold: SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'

extra pred: SELECT bname FROM bank WHERE branch_ID = (SELECT branch_ID FROM loan GROUP BY branch_ID ORDER BY SUM(amount) DESC LIMIT 1)
extra gold: SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1

extra pred: SELECT DISTINCT driverId FROM pitStops WHERE duration > (SELECT duration FROM pitStops WHERE raceId = 841)
extra gold: SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)

medium pred: SELECT T1.Name FROM Patient AS T1 JOIN Undergoes AS T2 ON T1.SSN = T2.Patient ORDER BY T2.DateUndergoes DESC LIMIT 1
medium gold: SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1

eval_err_num:138
extra pred: SELECT DISTINCT t3.paperid FROM author AS t1 JOIN writes AS t2 ON t1.authorid = t2.authorid JOIN cite AS t3 ON t2.paperid = t3.citingpaperid WHERE t1.authorname = "Daniel Jurafsky";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky";

eval_err_num:139
easy pred: SELECT T2.school_code FROM DEPARTMENT AS T1 JOIN SCHOOL AS T2 ON T1.school_code = T2.school_code WHERE T1.dept_name = "Accounting"
easy gold: SELECT school_code FROM department WHERE dept_name  =  "Accounting"

hard pred: SELECT t1.customer_name FROM Customers AS t1 JOIN Customer_Orders AS t2 ON t1.customer_id = t2.customer_id WHERE t1.payment_method = (SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)
hard gold: SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)

hard pred: SELECT customer_id FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)
hard gold: SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts

medium pred: SELECT T1.Company, COUNT(*) FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Company
medium gold: SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id

medium pred: SELECT T2.Title, MAX(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY T2.Title
medium gold: SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id

hard pred: SELECT DISTINCT Fname FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.Vice_President_Vote WHERE T1.city_code != "PIT"
hard gold: SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  "PIT"

extra pred: SELECT Room, COUNT(*) FROM Reservations GROUP BY Room ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;

extra pred: SELECT T2.Headquartered_City FROM store_district AS T1 JOIN district AS T2 ON T1.District_ID = T2.District_ID GROUP BY T2.Headquartered_City ORDER BY count(*) DESC LIMIT 1;
extra gold: SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT COUNT(*) FROM faculty AS T1 JOIN degrees AS T2 ON T1.Campus = T2.Campus AND T1.Year = T2.Year WHERE T2.Year = 2001 AND T2.Degrees = (SELECT MIN(Degrees) FROM degrees WHERE Year = 2001)
extra gold: SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1

extra pred: SELECT friend FROM PersonFriend AS t1 JOIN PersonFriend AS t2 ON t1.friend = t2.name WHERE t1.name = 'Alice'
extra gold: SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'

hard pred: SELECT count(*) FROM review AS t1 JOIN neighbourhood AS t2 ON t1.business_id = t2.business_id WHERE t2.neighbourhood_name = "South Summerlin"
hard gold: SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  "South Summerlin";

medium pred: SELECT count(*) , Claim_ID FROM Settlements GROUP BY Claim_ID
medium gold: SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id

eval_err_num:140
hard pred: SELECT product_id FROM Order_Items GROUP BY product_id HAVING COUNT(*) > 3 OR SUM(total_amount_purchased) > 80000
hard gold: SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000

hard pred: SELECT headquarters FROM company WHERE headquarters NOT IN (SELECT headquarters FROM company WHERE main_industry = 'Banking')
hard gold: SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'

eval_err_num:141
easy pred: SELECT T2.Character FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T1.age DESC
easy gold: SELECT Character FROM actor ORDER BY age DESC

extra pred: SELECT count(*) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T1.Sex = 'M' AND T3.AllergyType = 'Food'
extra gold: SELECT count(*) FROM Student WHERE sex  =  "M" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  "food")

medium pred: SELECT Activity.activity_name, count(DISTINCT Faculty_Participates_in.FacID) FROM Activity JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid GROUP BY Activity.activity_name
medium gold: SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID

eval_err_num:142
easy pred: SELECT "Song" FROM volume WHERE Weeks_on_Top > 1
easy gold: SELECT Song FROM volume WHERE Weeks_on_Top  >  1

hard pred: SELECT product FROM product WHERE max_page_size != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)
hard gold: SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)

medium pred: SELECT count(*) , month FROM tip GROUP BY month
medium gold: SELECT COUNT ( DISTINCT text )  ,  MONTH FROM tip GROUP BY MONTH;

eval_err_num:143
medium pred: SELECT max(training_hours), avg(training_hours), min(training_hours) FROM Player
medium gold: SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player

eval_err_num:144
medium pred: SELECT T1.first_name, T2.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = "Finance"
medium gold: SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'

medium pred: SELECT T1.booking_start_date, T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2
medium gold: SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2

extra pred: SELECT T1.id, T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id GROUP BY T1.id, T1.name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1

easy pred: SELECT count(*) FROM Stay WHERE Room = 112
easy gold: SELECT count(patient) FROM stay WHERE room  =  112

easy pred: SELECT count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.state_province_county = "Georgia";
easy gold: SELECT count(*) FROM Addresses WHERE state_province_county = "Georgia";

extra pred: SELECT DISTINCT COUNT(t4.citedPaperId) FROM paper AS t3 JOIN cite AS t4 ON t3.paperId = t4.citedPaperId JOIN writes AS t2 ON t2.paperId = t3.paperId JOIN author AS t1 ON t2.authorId = t1.authorId WHERE t1.authorName = "Dan Makumbi" AND t3.title = "Genetic Identity";
extra gold: SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN cite AS t5 ON t4.paperid  =  t5.citedpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Dan Makumbi" AND t3.keyphrasename  =  "Genetic Identity";

hard pred: SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)
hard gold: SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy

hard pred: SELECT S.Submission_ID, A.Result FROM submission AS S JOIN Acceptance AS A ON S.Submission_ID = A.Submission_ID ORDER BY S.Scores DESC LIMIT 1
hard gold: SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1

hard pred: SELECT DName FROM Department WHERE DNO NOT IN (SELECT DNO FROM Minor_in)
hard gold: SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO

eval_err_num:145
medium pred: SELECT MAX(Milliseconds) AS LongestTrack, MIN(Milliseconds) AS ShortestTrack FROM Track
medium gold: SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK

eval_err_num:146
hard pred: SELECT title FROM movie JOIN genre ON movie.mid = genre.mid WHERE genre.genre = "Sci-Fi" AND movie.release_year = 2010
hard gold: SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  "Sci-Fi" AND t3.release_year  =  2010;

eval_err_num:147
extra pred: SELECT T1.name, T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T3.brand <> 'Sigma'
extra gold: SELECT name ,  prominence FROM mountain EXCEPT SELECT T1.name ,  T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T3.brand  =  'Sigma'

eval_err_num:148
medium pred: SELECT T2.Date, T3.Player FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id = T2.id JOIN stadium AS T3 ON T2.stadium_id = T3.id ORDER BY T2.Season DESC
medium gold: SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC

hard pred: SELECT DISTINCT type FROM mill WHERE architect_id IN (SELECT id FROM architect WHERE nationality = 'American' OR nationality = 'Canadian')
hard gold: SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'American' OR T2.nationality  =  'Canadian'

medium pred: SELECT Committee FROM election WHERE Party IN (SELECT Party_ID FROM party WHERE Party = 'Democratic')
medium gold: SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  "Democratic"

hard pred: SELECT order_id FROM Shipments ORDER BY shipment_date DESC LIMIT 1
hard gold: SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)

extra pred: SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code JOIN professor AS T5 ON T1.prof_num = T5.emp_num WHERE T4.dept_name = 'Accounting'
extra gold: SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'

extra pred: SELECT response_received_date FROM Documents WHERE document_type_code IN (SELECT document_type_code FROM Document_Types WHERE document_description = 'Regular') OR grant_id IN (SELECT grant_id FROM Grants WHERE grant_amount > 100)
extra gold: SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100

eval_err_num:149
hard pred: SELECT How_to_Get_There, COUNT(*) AS Total_Count FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY Total_Count DESC LIMIT 1
hard gold: SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:150
hard pred: SELECT Settlements.Claim_ID, Claims.Start_Date FROM Settlements JOIN Claims ON Settlements.Claim_ID = Claims.Claim_ID WHERE Settlements.Amount_Claimed <= (SELECT AVG(Amount_Claimed) FROM Settlements)
hard gold: SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )

eval_err_num:151
hard pred: SELECT T1.Name FROM Scientists AS T1 LEFT JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist LEFT JOIN Projects AS T3 ON T2.Project = T3.Code WHERE T3.Hours < (SELECT MAX(Hours) FROM Projects) OR T3.Hours IS NULL
hard gold: SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)

medium pred: SELECT Year FROM hosting_city WHERE Host_City = (SELECT City_ID FROM city WHERE City = "Taizhou ( Zhejiang )")
medium gold: SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  "Taizhou ( Zhejiang )"

hard pred: SELECT City_Town FROM Addresses WHERE Address_ID IN (SELECT Address_ID FROM Clients) AND Address_ID NOT IN (SELECT Address_ID FROM Performers)
hard gold: SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID

medium pred: SELECT Name, Type, Flag FROM Ship WHERE Built_Year = (SELECT MAX(Built_Year) FROM Ship)
medium gold: SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1

extra pred: SELECT t1.title, COUNT(t3.citingPaperId) FROM paper AS t1 JOIN cite AS t3 ON t1.paperId = t3.citedPaperId JOIN venue AS t2 ON t2.venueId = t1.venueId WHERE t1.year = 2010 AND t2.venueName = "EMNLP" GROUP BY t1.paperId ORDER BY COUNT(t3.citingPaperId) DESC;
extra gold: SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  "EMNLP" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;

eval_err_num:152
extra pred: SELECT t3.title, COUNT(t4.citedpaperid) AS numCitations FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid JOIN cite AS t4 ON t3.paperid = t4.citedpaperid WHERE t1.keyphrasename = "parsing" GROUP BY t3.title ORDER BY numCitations DESC;
extra gold: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;

hard pred: SELECT T1.customer_name FROM Customers AS T1 JOIN Mailshot_Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.outcome_code = 'Order' GROUP BY T1.customer_name HAVING COUNT(T2.mailshot_id) >= 2
hard gold: SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2

hard pred: SELECT document_id, count(*) FROM Draft_Copies GROUP BY document_id ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;

easy pred: SELECT T1.Month FROM happy_hour AS T1 JOIN happy_hour_member AS T2 ON T1.HH_ID = T2.HH_ID GROUP BY T1.Month HAVING count(*) > 2;
easy gold: SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2

extra pred: SELECT t1.last_name FROM Staff AS t1 JOIN Complaints AS t2 ON t1.staff_id = t2.staff_id JOIN Products AS t3 ON t2.product_id = t3.product_id WHERE t3.product_price = (SELECT MIN(product_price) FROM Products)
extra gold: SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1

medium pred: SELECT booking_start_date, booking_end_date FROM Apartment_Bookings AS t1 JOIN Apartments AS t2 ON t1.apt_id = t2.apt_id WHERE t2.apt_type_code = "Duplex"
medium gold: SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  "Duplex"

eval_err_num:153
hard pred: SELECT Advisor, COUNT(*) AS num_students FROM Student GROUP BY Advisor ORDER BY num_students DESC LIMIT 1
hard gold: SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1

easy pred: SELECT max(rank) FROM review
easy gold: SELECT min(rank) FROM review

medium pred: SELECT T1.investor_id, AVG(T2.share_count) FROM Investors AS T1 JOIN Transactions AS T2 ON T1.investor_id = T2.investor_id GROUP BY T1.investor_id
medium gold: SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id

medium pred: SELECT County_name FROM county WHERE Population = (SELECT MAX(Population) FROM county);
medium gold: SELECT County_name FROM county ORDER BY Population DESC LIMIT 1

medium pred: SELECT avg(Weeks_on_Top) FROM volume WHERE Artist_ID IN (SELECT Artist_ID FROM artist WHERE Age <= 25)
medium gold: SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25

eval_err_num:154
extra pred: SELECT T2.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.Store_ID = T2.Store_ID WHERE T1.Type = 'City Mall' INTERSECT SELECT T2.District_name FROM store AS T1 JOIN store_district AS T2 ON T1.Store_ID = T2.Store_ID WHERE T1.Type = 'Village Store'
extra gold: SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  "City Mall" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  "Village Store"

eval_err_num:155
extra pred: SELECT t3.year FROM writes AS t3 JOIN author AS t2 ON t3.authorid = t2.authorid JOIN writes AS t4 ON t4.paperid = t3.paperid JOIN author AS t1 ON t4.authorid = t1.authorid WHERE t2.authorname = "Peter Mertens" AND t1.authorname = "Dina Barbian";
extra gold: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";

medium pred: SELECT count(DISTINCT T2.Furniture_ID), T1.Name FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID GROUP BY T1.Name
medium gold: SELECT count(*) ,  t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id GROUP BY t1.manufacturer_id

medium pred: SELECT T1.StuID, COUNT(T2.SportName), SUM(T2.GamesPlayed) FROM Student AS T1 JOIN SportsInfo AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
medium gold: SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID

hard pred: SELECT Patient FROM Stay WHERE Room = 111 ORDER BY StayEnd DESC LIMIT 1
hard gold: SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1

hard pred: SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Enrolled_in WHERE Grade IN (SELECT lettergrade FROM Gradeconversion WHERE gradepoint >= 3.8))
hard gold: SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8

extra pred: SELECT T2.Name FROM people AS T1 JOIN wedding AS T3 ON T1.People_ID = T3.Male_ID OR T1.People_ID = T3.Female_ID JOIN church AS T2 ON T2.Church_ID = T3.Church_ID WHERE T1.Age > 30
extra gold: SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30

extra pred: SELECT state_name FROM city WHERE city_name = "montana"
extra gold: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "montana" ) AND state_name  =  "montana";

eval_err_num:156
extra pred: SELECT MAX(Milliseconds) AS longest_duration, MIN(Milliseconds) AS shortest_duration FROM Track WHERE GenreId = (SELECT GenreId FROM Genre WHERE Name = 'Pop')
extra gold: SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  "Pop"

hard pred: SELECT state_name FROM highlow WHERE highest_point > (SELECT highest_point FROM highlow WHERE state_name = "colorado");
hard gold: SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  "colorado" );

extra pred: SELECT T2.Sex FROM candidate AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Unsure_rate DESC LIMIT 1
extra gold: SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1

extra pred: SELECT T2.Name, T1.Scientist FROM AssignedTo AS T1 JOIN Projects AS T2 ON T1.Project = T2.Code GROUP BY T1.Project HAVING T2.Hours = (SELECT MIN(Hours) FROM Projects)
extra gold: SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)

eval_err_num:157
hard pred: SELECT T1.artist_name, T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE MONTH(T2.releasedate) = 3
hard gold: SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE "%Mar%"

extra pred: SELECT coupon_amount FROM Discount_Coupons WHERE coupon_id IN (SELECT coupon_id FROM Customers WHERE good_or_bad_customer = 'good') AND coupon_id IN (SELECT coupon_id FROM Customers WHERE good_or_bad_customer = 'bad')
extra gold: SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad'

extra pred: SELECT t4.venueName FROM venue AS t4 JOIN paper AS t3 ON t4.venueId = t3.venueId JOIN writes AS t2 ON t2.paperId = t3.paperId JOIN author AS t1 ON t2.authorId = t1.authorId WHERE t1.authorName = "Peter Mertens";
extra gold: SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Peter Mertens";

hard pred: SELECT artist.Name FROM artist JOIN exhibition ON artist.Artist_ID = exhibition.Artist_ID JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID GROUP BY artist.Name HAVING AVG(exhibition_record.Attendance) > 200
hard gold: SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200

eval_err_num:158
medium pred: SELECT avg(T1.Age), T2.city_code, T2.city_name FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code GROUP BY T2.city_code, T2.city_name
medium gold: SELECT avg(age) ,  city_code FROM student GROUP BY city_code

eval_err_num:159
extra pred: SELECT DISTINCT p.paperId, p.title FROM paper p JOIN writes w ON p.paperId = w.paperId JOIN author a ON w.authorId = a.authorId JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId WHERE a.authorName = "brian curless" AND k.keyphraseName = "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

hard pred: SELECT T1.College FROM match_season AS T1 JOIN player AS T2 ON T1.Player = T2.Player WHERE T1.Position = "Midfielder" INTERSECT SELECT T1.College FROM match_season AS T1 JOIN player AS T2 ON T1.Player = T2.Player WHERE T1.Position = "Defender"
hard gold: SELECT College FROM match_season WHERE POSITION  =  "Midfielder" INTERSECT SELECT College FROM match_season WHERE POSITION  =  "Defender"

medium pred: SELECT T1.StuID, COUNT(T2.SportName), SUM(T2.GamesPlayed) FROM Student AS T1 JOIN SportsInfo AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
medium gold: SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID

hard pred: SELECT count(*) , T1.grant_id FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id GROUP BY T1.grant_id ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1

hard pred: SELECT song_name FROM song WHERE rating < (SELECT MIN(rating) FROM song WHERE genre_is = 'blues')
hard gold: SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  "blues")

medium pred: SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.name = 'Alice' AND T1.job = 'doctor'
medium gold: SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'

hard pred: SELECT title FROM course WHERE course_id IN (SELECT prereq_id FROM prereq WHERE course_id = 'International Finance')
hard gold: SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')

eval_err_num:160
medium pred: SELECT T1.customer_id, CONCAT(T2.customer_first_name, ' ', T2.customer_last_name) AS full_name FROM Customers_Cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING COUNT(*) >= 2
medium gold: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2

medium pred: SELECT T1.EMP_FNAME FROM EMPLOYEE AS T1 JOIN PROFESSOR AS T2 ON T1.EMP_NUM = T2.EMP_NUM WHERE T1.EMP_JOBCODE = 'PROF' ORDER BY T1.EMP_DOB
medium gold: SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob

hard pred: SELECT T2.Name FROM Physician AS T2 WHERE T2.EmployeeID NOT IN (SELECT T1.Physician FROM Appointment AS T1)
hard gold: SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID

medium pred: SELECT person_id FROM People WHERE email_address = "stanley.monahan@example.org"
medium gold: SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = "stanley.monahan@example.org"

eval_err_num:161
extra pred: SELECT DISTINCT p.paperId, p.title FROM paper p JOIN paperKeyphrase pk ON p.paperId = pk.paperId JOIN keyphrase k ON pk.keyphraseId = k.keyphraseId JOIN writes w ON p.paperId = w.paperId JOIN author a ON w.authorId = a.authorId WHERE a.authorName = "brian curless" AND k.keyphraseName = "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

extra pred: SELECT t3.paperid, t3.title, t3.numCitedBy FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid = t1.keyphraseid JOIN paper AS t3 ON t3.paperid = t2.paperid WHERE t1.keyphrasename = "Artificial Intelligence" ORDER BY t3.numCitedBy DESC LIMIT 1;
extra gold: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "Artificial Intelligence" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;

eval_err_num:162
medium pred: SELECT h.name, h.born_state, h.age FROM head h JOIN management m ON h.head_ID = m.head_ID ORDER BY h.age
medium gold: SELECT name ,  born_state ,  age FROM head ORDER BY age

extra pred: SELECT T1.surname, T1.driverId FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId GROUP BY T1.driverId HAVING COUNT(DISTINCT T2.stop) = 11 AND COUNT(DISTINCT T3.raceId) > 5
extra gold: SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5

hard pred: SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid = t1.authorid JOIN paper AS t3 ON t2.paperid = t3.paperid WHERE t1.authorname = "Mary Crainie" ORDER BY t3.year DESC LIMIT 1;
hard gold: SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Mary Crainie";

eval_err_num:163
medium pred: SELECT A.name, C.balance as checking_balance, S.balance as savings_balance FROM ACCOUNTS A JOIN CHECKING C ON A.custid = C.custid JOIN SAVINGS S ON A.custid = S.custid
medium gold: SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid

easy pred: SELECT max(max_page_size) FROM product WHERE product_id IN (SELECT product_id FROM store_product GROUP BY product_id HAVING COUNT(*) > 3)
easy gold: SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3

hard pred: SELECT Employee_ID FROM Employees WHERE Employee_ID NOT IN (SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_Destroyed)
hard gold: SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed

eval_err_num:164
medium pred: SELECT T1.director, T2.title, T2.stars FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars = (SELECT min(stars) FROM Rating WHERE mID = T1.mID) GROUP BY T1.director
medium gold: SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director

easy pred: SELECT dept_address FROM department WHERE school_code = 'BUS'
easy gold: SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'

hard pred: SELECT river_name FROM river WHERE traverse != "tennessee";
hard gold: SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  "tennessee" );

hard pred: SELECT Nominee FROM musical WHERE Award = "Tony Award" AND Nominee IN (SELECT Nominee FROM musical WHERE Award = "Drama Desk Award")
hard gold: SELECT Nominee FROM musical WHERE Award  =  "Tony Award" INTERSECT SELECT Nominee FROM musical WHERE Award  =  "Drama Desk Award"

medium pred: SELECT DISTINCT COUNT(t2.citingPaperId), t1.paperId FROM paper AS t1 JOIN cite AS t2 ON t1.paperId = t2.citedPaperId GROUP BY t1.paperId HAVING COUNT(t2.citingPaperId) >= 5;
medium gold: SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;

extra pred: SELECT DISTINCT t1.title FROM paper AS t1 JOIN cite AS t2 ON t1.paperId = t2.citingPaperId JOIN paper AS t3 ON t3.paperId = t2.citedPaperId JOIN writes AS t4 ON t4.paperId = t3.paperId JOIN author AS t5 ON t5.authorId = t4.authorId WHERE t5.authorName = "Daniel Jurafsky";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky";

eval_err_num:165
easy pred: SELECT `highest_point` FROM highlow
easy gold: SELECT highest_point FROM highlow;

eval_err_num:166
medium pred: SELECT T.Team FROM player AS P JOIN (SELECT MAX(Age) AS max_age FROM player) AS T1 ON P.Age = T1.max_age JOIN team AS T ON P.Team = T.Team
medium gold: SELECT Team FROM player ORDER BY Age DESC LIMIT 1

hard pred: SELECT year, player_id, salary FROM salary WHERE year = 2001 ORDER BY salary DESC LIMIT 3
hard gold: SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;

extra pred: SELECT T2.fname, T2.Age FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = "Football" AND T2.StuID IN (SELECT StuID FROM SportsInfo WHERE SportName = "Lacrosse")
extra gold: SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  "Football" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  "Lacrosse")

easy pred: SELECT COUNT(*) FROM movie WHERE release_year = 2013
easy gold: SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;

eval_err_num:167
medium pred: SELECT director FROM Movie WHERE director IS NOT NULL GROUP BY director HAVING count(*) = 1
medium gold: SELECT director FROM Movie WHERE director != "null" GROUP BY director HAVING count(*)  =  1

hard pred: SELECT T1.Studio FROM film AS T1 WHERE T1.Director != "Walter Hill"
hard gold: SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  "Walter Hill"

medium pred: SELECT Customer_Details FROM Customers WHERE Customer_ID IN (SELECT Customer_ID FROM Policies WHERE Policy_Type_Code = "Deputy")
medium gold: SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  "Deputy"

medium pred: SELECT city.population FROM city JOIN state ON city.state_name = state.state_name WHERE state.state_name = "wisconsin" AND city.population > 100000;
medium gold: SELECT population FROM city WHERE population  >  150000 AND state_name  =  "wisconsin";

eval_err_num:168
extra pred: SELECT s.name, s.average_attendance, s.total_attendance FROM stadium s WHERE s.id NOT IN (SELECT g.stadium_id FROM game g JOIN injury_accident ia ON g.id = ia.game_id)
extra gold: SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id

eval_err_num:169
extra pred: SELECT DISTINCT p.paperId, p.title FROM paper p JOIN venue v ON p.venueId = v.venueId JOIN writes w ON p.paperId = w.paperId JOIN author a ON w.authorId = a.authorId WHERE a.authorName = "Richard Ladner" AND v.venueName = "chi";
extra gold: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Richard Ladner" AND t4.venuename  =  "chi";

medium pred: SELECT account_id, account_name, other_account_details FROM Accounts JOIN Customers ON Accounts.customer_id = Customers.customer_id WHERE Customers.customer_first_name = 'Meaghan'
medium gold: SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'

medium pred: SELECT Physician.Name, COUNT(Patient.SSN) FROM Physician JOIN Patient ON Physician.EmployeeID = Patient.PCP GROUP BY Physician.Name
medium gold: SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid

hard pred: SELECT T1.Country FROM stadium AS T1 WHERE T1.Opening_year <= 2006
hard gold: SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006

eval_err_num:170
medium pred: SELECT Employees.Employee_ID, COUNT(Documents_to_be_Destroyed.Document_ID) FROM Employees LEFT JOIN Documents_to_be_Destroyed ON Employees.Employee_ID = Documents_to_be_Destroyed.Destroyed_by_Employee_ID GROUP BY Employees.Employee_ID
medium gold: SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID

medium pred: SELECT Member_Name FROM member WHERE Party_ID NOT IN (SELECT Party_ID FROM party WHERE Party_name = "Progress Party")
medium gold: SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != "Progress Party"

hard pred: SELECT name FROM Person WHERE name NOT IN (SELECT name FROM PersonFriend)
hard gold: SELECT name FROM person EXCEPT SELECT name FROM PersonFriend

eval_err_num:171
hard pred: SELECT t2.ClubName FROM Student AS t1 JOIN Member_of_club AS t2 ON t1.StuID = t2.StuID JOIN Club AS t3 ON t2.ClubID = t3.ClubID WHERE t1.LName = "Davis" AND t1.Fname = "Steven"
hard gold: SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  "Davis" AND t3.lname  =  "Steven"

eval_err_num:172
hard pred: SELECT T2.product FROM store AS T1 JOIN store_product AS T2 ON T1.Store_ID = T2.Store_ID WHERE T1.Store_Name = "Miramichi"
hard gold: SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  "Miramichi"

hard pred: SELECT course_id FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)
hard gold: SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq

medium pred: SELECT avg(stars) FROM Rating GROUP BY rID
medium gold: SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name

hard pred: SELECT rID FROM Rating WHERE stars != 4
hard gold: SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4

easy pred: SELECT city_name FROM city WHERE country_name = 'USA' AND population > 150000;
easy gold: SELECT city_name FROM city WHERE population  >  150000;

eval_err_num:173
medium pred: SELECT sum(Amount_Paid), avg(Amount_Paid) FROM Claim_Headers
medium gold: SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers

hard pred: SELECT artist_name FROM artist WHERE country = 'UK' AND preferred_genre IN (SELECT g_name FROM genre WHERE rating = 'English')
hard gold: SELECT artist_name FROM artist WHERE country  =  "UK" INTERSECT SELECT artist_name FROM song WHERE languages  =  "english"

eval_err_num:174
medium pred: SELECT T1.School, T2.Nickname FROM university AS T1 JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID ORDER BY T1.Founded ASC
medium gold: SELECT school ,  nickname FROM university ORDER BY founded

eval_err_num:175
medium pred: SELECT count(*) as num_students, state FROM College WHERE cName IN (SELECT cName FROM Tryout WHERE decision = 'yes') GROUP BY state
medium gold: SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'

medium pred: SELECT count(DISTINCT dst_ap) FROM routes WHERE airline = 'AA'
medium gold: SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'

eval_err_num:176
hard pred: SELECT count(*) as num_instructors, avg(salary) as avg_salary FROM instructor WHERE dept_name = (SELECT dept_name FROM department ORDER BY budget DESC LIMIT 1)
hard gold: SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1

eval_err_num:177
extra pred: SELECT T1.Claim_ID, T1.Date_Claim_Made, COUNT(*) AS Settlement_Count FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_ID = T2.Claim_ID GROUP BY T1.Claim_ID, T1.Date_Claim_Made ORDER BY Settlement_Count DESC LIMIT 1
extra gold: SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1

medium pred: SELECT t1.title FROM paper AS t1 JOIN venue AS t2 ON t1.venueId = t2.venueId WHERE t1.year = 2015 AND t2.venueName = "pldi";
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

eval_err_num:178
medium pred: SELECT first_name, last_name FROM Candidates
medium gold: SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id

extra pred: SELECT T3.product_id, T2.product_details FROM Products AS T2 JOIN Order_Items AS T3 ON T2.product_id = T3.product_id GROUP BY T3.product_id ORDER BY SUM(T3.order_quantity) DESC LIMIT 1
extra gold: SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1

medium pred: SELECT degrees FROM degrees WHERE Campus = "San Francisco State University" AND Year = 2001
medium gold: SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  "San Francisco State University" AND t2.year  =  2001

extra pred: SELECT Theme FROM exhibition WHERE Exhibition_ID IN (SELECT Exhibition_ID FROM exhibition_record WHERE Attendance < 100 INTERSECT SELECT Exhibition_ID FROM exhibition_record WHERE Attendance > 500)
extra gold: SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500

easy pred: SELECT count(*) FROM DEPARTMENT
easy gold: SELECT count(DISTINCT dept_name) FROM department

hard pred: SELECT T2.product_name, COUNT(*) FROM Order_Items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id
hard gold: SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id

hard pred: SELECT artist_name FROM artist WHERE country = "UK" AND preferred_genre = "English"
hard gold: SELECT artist_name FROM artist WHERE country  =  "UK" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  "english"

extra pred: SELECT T2.lname FROM Authors AS T2 JOIN Authorship AS T1 ON T1.authID = T2.authID GROUP BY T1.authID ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1

                     easy                 medium               hard                 extra                all                 
count                393                  621                  372                  346                  1732                
=====================   EXECUTION ACCURACY     =====================
execution            0.850                0.763                0.645                0.613                0.727               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.860                0.699                0.546                0.468                0.656               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.942                0.911                0.896                0.836                0.902               
select(no AGG)       0.955                0.915                0.905                0.843                0.909               
where                0.905                0.848                0.706                0.766                0.801               
where(no OP)         0.917                0.851                0.758                0.790                0.824               
group(no Having)     0.963                0.808                0.892                0.817                0.843               
group                0.926                0.750                0.862                0.742                0.787               
order                1.000                0.904                0.885                0.816                0.885               
and/or               1.000                0.990                0.975                0.916                0.975               
IUEN                 0.000                0.000                0.733                0.786                0.759               
keywords             0.963                0.928                0.816                0.800                0.880               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.906                0.828                0.785                0.691                0.809               
select(no AGG)       0.919                0.831                0.793                0.697                0.816               
where                0.911                0.804                0.712                0.624                0.751               
where(no OP)         0.923                0.808                0.764                0.643                0.772               
group(no Having)     0.867                0.729                0.773                0.661                0.728               
group                0.833                0.677                0.747                0.600                0.680               
order                0.979                0.787                0.793                0.700                0.785               
and/or               0.995                1.000                0.953                0.950                0.979               
IUEN                 0.000                0.000                0.172                0.250                0.204               
keywords             0.951                0.850                0.715                0.661                0.789               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.923                0.868                0.837                0.756                0.853               
select(no AGG)       0.936                0.871                0.845                0.763                0.860               
where                0.908                0.826                0.709                0.688                0.775               
where(no OP)         0.920                0.829                0.761                0.709                0.797               
group(no Having)     0.912                0.767                0.829                0.731                0.781               
group                0.877                0.711                0.800                0.663                0.729               
order                0.989                0.842                0.836                0.753                0.832               
and/or               0.997                0.995                0.964                0.933                0.977               
IUEN                 1.000                1.000                0.278                0.379                0.321               
keywords             0.957                0.887                0.762                0.724                0.832               
